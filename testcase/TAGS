
../hostio/hiMain.c,327
#define HEADER_LENGTH 16,308
#define MAX_DATA_LENGTH 17,336
void hi_qput(30,737
void* hi_qget(76,1868
Byte hi_qis(111,2763
void hiSendCMDPkt(148,3857
void hiSendFILEPkt(179,4623
void hiCreateHeader(223,5961
void hiSend(321,8782
int hiReceiveHeader(341,9362
int hiReceiveData 359,9839
void* analysisHeader(375,10192

../hostio/hiMain.h,24
#define _HIMAIN_H9,102

../hostio/hiPipe.c,103
#define PIPE_DIR 15,267
#define MAX_FILE_NAME_LENGTH 18,302
int hiOpenPipe(37,881
int main(91,2452

../hostio/hiPipe.h,24
#define _HIPIPE_H9,102

../hostio/libhi.h,23
#define _LIBHI_H_2,18

../slotio/envApi.h,25
#define _ENV_API_H_2,21

../slotio/hitachi_sio2.cpp,2161
#define ISCMD(58,1179
#define WAPI_BUFFER_SIZE 61,1258
#define WAPI_DRIVE_TIMEOUT_MS 63,1301
#define WAPI_PROFILE_START	64,1338
#define WAPI_PROFILE_STOP	65,1385
#define WAPI_DRIVE_TYPE_EC7	66,1431
#define WAPI_DRIVE_TYPE_PTB	67,1464
#define WAPI_DRIVE_TYPE_EB7	68,1497
#define WAPI_DRIVE_TYPE_INVALID 69,1530
#define WAPI_TEST01_ENABLE_64K 72,1588
#define WAPI_TEST01_EXIT_ON_ERROR 73,1630
#define WAPI_TEST01_CONTINUE_READ 74,1674
#define WAPI_TEST01_TEST_UART_VER 75,1718
#define WAPI_TEST09_ECHO_COUNT 79,1785
#define WAPI_TEST09_TARGET_TEMP1	80,1887
#define WAPI_TEST09_TARGET_TEMP2	81,1962
#define WAPI_TEST09_POS_RAMP 82,2037
#define WAPI_TEST09_NEG_RAMP 83,2110
#define WAPI_TEST09_SAFE_TEMP 84,2183
#define WAPI_TEST09_TARGET_TEMP_WAIT_SEC 85,2258
#define WAPI_TEST09_IDLE_WAIT_SEC 86,2348
#define WAPI_TEST09_VOLTAGE_CHECK 87,2472
#define WAPI_TEST09_HTEMP_ENABLE 88,2586
typedef struct drive_info_t 91,2685
DRIVE_INFO;101,2880
static Byte Data[Data104,2894
static int  verbose;105,2930
static int 	quiteMode;106,2951
static int 	driveType;107,2974
DRIVE_INFO driveInfo[driveInfo109,3091
Dword   baudRates[baudRates114,3388
int baudRateIndex 115,3490
static void showApiHelp(132,3845
static void terprintf(199,8551
static void printBanner(211,8738
static void printData(218,8961
static Byte initDriveParameters(233,9246
static void printTemperatureVariables(249,9703
static Byte initTest(285,10673
static Byte finishTest(312,11266
static void  profileTimer 322,11386
static Byte  gethtemp 362,12481
static void  adjhtemp 401,13636
static Byte test01(471,15705
static Byte test02(604,18755
static Byte test03(645,19558
static Byte test04(700,20927
static Byte test05(785,23120
static Byte test06(847,25447
static Byte test07(904,26591
static Byte test08(945,27369
static Byte test09(988,28159
static Byte test10(1159,32170
static Byte test97(1193,32633
#define  WAPI_TEST98_READ_SIZE 1236,33315
static Byte Data1[Data11237,33358
static Byte test98(1239,33396
static Byte test99(1302,34727
static Byte testApi(1353,36009
char *strSiInitError[strSiInitError1791,47699
int main(1802,48049

../slotio/libsi.h,26
#define _LIBSI_H_98,4172

../slotio/neptune_hitachi_comm.c,29
Word computeChecksum(11,148

../slotio/neptune_hitachi_comm.h,37
#define NEPTUNE_HITACHI_COMM_H_6,66

../slotio/neptune_hitachi_interface.cpp,6147
#define WAPI_TCLOGGER_ENABLE153,7210
#define UART_PULLUP_VOLTAGE_DEFAULT 165,7439
#define WAPI_DEBUG_TRACE_DISABLE 166,7481
#define WAPI_DEBUG_TRACE_ENABLE 167,7518
#define WAPI_V5_LIMIT_IN_MILLI_AMPS 168,7554
#define WAPI_V12_LIMIT_IN_MILLI_AMPS 169,7596
#define WAPI_V5_LOWER_LIMIT_MV 170,7636
#define WAPI_V5_UPPER_LIMIT_MV 171,7675
#define WAPI_V12_LOWER_LIMIT_MV 172,7714
#define WAPI_V12_UPPER_LIMIT_MV 173,7750
#define WAPI_OVER_VOLTAGE_PROT_LIMIT_MV 174,7786
#define WAPI_READ_CMD_OVERHEAD_BYTES 175,7831
#define WAPI_MAX_BYTES_FROM_SMALL_BUFF 176,7936
#define WAPI_SEND_RECV_BUF_SIZE 177,8014
#define WAPI_SEND_RECV_BIG_BUF_SIZE 178,8086
#define WAPI_CMD_RESP_BUF_SIZE 179,8165
#define WAPI_TX_HALT_ON_ERROR_MASK 180,8207
#define WAPI_ACK_TIMEOUT_MASK 181,8255
#define WAPI_HITACHI_SPECIAL_ENABLE 182,8298
#define WAPI_64K_MAX_PENDING_PER_FPGA_DEFAULT 183,8341
#define WAPI_TEMP_ADJ_TARGET_TEMP_MIN 184,8393
#define WAPI_TEMP_ADJ_OFFSET_MAX 185,8534
#define WAPI_PRINT_JOURNAL_ALL 188,8644
#define WAPI_PRINT_JOURNAL_ON_ERROR	189,8680
#define wapi2sio(192,8723
#define sio2wapi(193,8772
pthread_mutex_t  mutex_slotio;197,8854
TER_HtempInfo siHtempInfo;198,8885
static int  siTempAdjustmentOffset 220,9888
static int 	siSlotIdx 225,9971
static int 	siSioConnected 226,9999
static int 	siTargetVoltage5VinMilliVolts 227,10090
static int 	siTargetVoltage12VinMilliVolts 228,10137
static int 	siUartPullupVoltageInMilliVolts 229,10185
static int 	si64kMaxPendingPerFPGA 230,10234
static Word siV5LowerLimitInMilliVolts 232,10311
static Word siV12LowerLimitInMilliVolts 233,10356
static Word siV5UpperLimitInMilliVolts 234,10402
static Word siV12UpperLimitInMilliVolts 235,10447
static Word siSetTempLowerInHundredth 237,10493
static Word siSetTempUpperInHundredth 238,10537
static Word siSensorTempLowerInHundredth 239,10581
static Word siSensorTempUpperInHundredth 240,10628
static int 	siUartProtocol 242,10675
static class Neptune_sio2 *ns2 ns2243,10707
static int  siLogLevel 244,10746
static char logFileName[logFileName245,10795
static Word siTemperatureTarget 246,10834
static int  siReadHtempConfig 247,10871
Byte clearFPGABuffers(264,11364
Byte siInitialize(326,12666
Byte siFinalize(545,20509
Byte isCellEnvironmentError(582,21512
Byte clearCellEnvironmentError(627,22923
Byte getCurrentTemperature(659,23838
Byte setTargetTemperature(704,25270
Byte getTargetTemperature(791,28108
Byte getReferenceTemperature(833,29427
Byte getHeaterOutput(852,30084
Byte setHeaterOutput(892,31250
Byte getShutterPosition(924,32208
Byte setShutterPosition(960,33219
Byte getTemperatureErrorStatus(986,34029
Byte getPositiveTemperatureRampRate(1055,36410
Byte setPositiveTemperatureRampRate(1098,37787
Byte getNegativeTemperatureRampRate(1166,40080
Byte setNegativeTemperatureRampRate(1206,41347
Byte setTemperatureSensorCarlibrationData(1281,44149
 Byte setTemperatureLimit(1308,45293
 Byte getTemperatureLimit(1343,46867
Byte setSafeHandlingTemperature(1383,48518
Byte getSafeHandlingTemperature(1417,49530
Byte setTargetVoltage(1441,50364
Byte getTargetVoltage(1542,53362
Byte getCurrentVoltage(1572,54336
Byte getActualCurrent(1621,55797
Byte setVoltageCalibration(1684,58083
Byte setVoltageLimit(1728,60356
Byte getVoltageLimit(1775,62352
Byte setCurrentLimit(1816,64115
Byte getCurrentLimit(1853,65281
Byte setVoltageRiseTime(1886,66555
Byte getVoltageRiseTime(1945,68626
Byte setVoltageFallTime(1994,70399
Byte getVoltageFallTime(2053,72470
Byte setVoltageInterval(2109,74372
Byte getVoltageInterval(2151,75627
Byte getVoltageErrorStatus(2175,76370
Byte isDrivePlugged(2231,78080
Byte getCellInventory(2273,79294
Byte setTemperatureEnvelope(2343,81997
Byte getTemperatureEnvelope(2380,83003
Byte setUartPullupVoltageDefault(2427,84697
Byte setUartPullupVoltage(2443,85030
Byte getUartPullupVoltage(2498,86812
Byte siSetUartBaudrate(2527,87693
Byte siGetUartBaudrate(2561,88607
Byte siBulkReadFromDrive(2600,89728
Byte siBulkWriteToDrive(2650,91210
Byte siWriteDriveMemory(2712,93039
Byte siReadDriveMemory2KAndLess(2813,96164
Byte siReadDriveMemoryMulti(2912,99215
Byte siReadDriveMemory(2964,100560
Byte siEchoDrive(3104,105082
Byte siGetDriveUartVersion(3199,108260
Byte siSetDriveDelayTime(3275,110534
Byte siResetDrive(3367,113691
Byte siChangeToUart3(3432,115641
Byte siSetUartProtocol(3511,118018
Byte isOnTemp(3536,118761
Byte siSetDriveFanRPM(3575,119788
Byte siSetElectronicsFanRPM(3610,120806
Byte siSetFanRPMDefault(3639,121672
Byte siSetSupplyOverVoltageProtectionLevel(3666,122453
Byte siSetLed(3697,123366
Byte isSlotThere(3728,124181
Byte siSetDebugLogLevel(3765,125499
Byte siSetInterCharacterDelay 3815,126733
Byte siGetInterCharacterDelay 3847,127670
Byte siGetLastErrors(3878,128551
Byte siClearHaltOnError(3914,129508
Byte siSetAckTimeout 3957,130858
Byte siGetAckTimeout 3989,131761
Byte siSetInterPacketDelay 4021,132741
static Byte sanityCheck(4050,133522
#define  MAX_LINE_LENGTH 4060,133703
static void printBuffer(4064,133799
static void createNeptuneIso2(4089,134218
void destroyNeptuneIso2(4103,134439
Byte terSio2Connect(4118,134700
Byte terSio2Disconnect(4147,135226
static Byte terSio2Reconnect(4167,135553
void setDriveSlotIndex(4189,136010
static Byte validateReceivedData(4194,136065
static void terPrintf(4292,139021
static void printJournal(4367,140747
void terPrintError(4411,141727
char *terGetWapiLibVersion terGetWapiLibVersion4421,141934
static Byte bWapiTestMode 4432,142099
void terSetWapiTestMode(4437,142180
Byte terGetWapiTestMode(4445,142308
void terPrintSlotInfo(4454,142422
static void terError(4497,144063
static void terFlushReceiveBuffer(4517,144499
static int terReadTempAdjustments(4534,144919
#define 	WAPI_HTEMP_ADJ_ENABLED 4574,145696
#define 	WAPI_HTEMP_DELTA_MIN 4575,145733
#define 	WAPI_HTEMP_DELTA_MAX 4576,145798
#define 	WAPI_HTEMP_ADJ_INCREMENTS	4577,145863
#define 	WAPI_HTEMP_ADJ_MAX_SET_POINT	4578,145903
#define  	WAPI_HTEMP_WAIT_TIME_OFFSET_SEC	4579,145975
Byte adjustTemperatureControlByDriveTemperature(4594,146492

../slotio/neptune_hitachi_interface.h,1343
#define NEPTUNE_HITACHI_INTERFACE_H_6,76
#define  WAPI_DEFAULT_LOG_LEVEL 17,723
#define TLOG_ENTRY(19,760
#define TLOG_TRACE(21,854
#define TLOG_EXIT(23,969
#define TLOG_WARNING(25,1063
#define TLOG_ERROR(27,1126
#define TLOG_BUFFER(31,1244
#define WAPI_RPC_LAST_ATTEMPT 34,1343
#define WAPI_CALL_RPC_WITh_RETRY(35,1375
typedef enum TER_WAPI_Error	49,2024
	Success 51,2060
	TerError 52,2074
	DriveError 53,2089
    SIO_Not_Reachable=54,2106
	SIO_Socket_Error=55,2183
	DIO_Non_Responsive=56,2262
	DIO_App_Error=57,2318
	DIO_Firmware_Update_Error=58,2398
	DriveAckSuccess 59,2464
	DriveAckSuccess = 0x80,x8059,2464
	DriveAckReceiverOverrun 60,2489
	DriveAckReceiverOverrun = 0x81,x8160,2489
	DriveAckDataUnstable 61,2522
	DriveAckDataUnstable = 0x82,x8261,2522
	DriveAckFrameError 62,2552
	DriveAckFrameError = 0x84,x8462,2552
	DriveAckInvalidSyncPacket 63,2580
	DriveAckInvalidSyncPacket = 0x88,x8863,2580
	DriveAckInvalidLengthPacket 64,2615
	DriveAckInvalidLengthPacket = 0x90,x9064,2615
	DriveAckCommandChecksumError 65,2652
	DriveAckCommandChecksumError = 0xA0,xA065,2652
	DriveAckFlowControlError 66,2690
	DriveAckFlowControlError = 0xA1,xA166,2690
	DriveAckInvalidState 67,2724
	DriveAckInvalidState = 0xC0,xC067,2724
	DriveAckCommandReject 68,2754
	DriveAckCommandReject = 0xC1xC168,2754

../slotio/neptune_sio2.h,18552
#define __neptune_sio2_h__2,27
#define FALSE 18,323
#define CLIENT 19,339
#define DP_FLAGS_none 35,608
#define DP_FLAGS_timeout 36,651
#define DP_FLAGS_in_boot_loader 37,694
#define DP_FLAGS_main_app_xsum_not_valid 38,737
#define DP_FLAGS_upgrade_recommended 39,780
#define DP_FLAGS_1030_mismatch 40,823
typedef struct dio_present_struct_t 43,907
} __attribute__((__packed__)) DP;116,2634
#define ERRLOG_LOG_SIZE 119,2722
#define HUGE_BUFFER_MAX 121,2751
enum TER_Signals 124,2811
  SigFIDReset 125,2830
  SigFIDBootstrap 126,2853
  SigPM2 127,2876
typedef enum TER_Signals TER_Signals;129,2902
typedef unsigned int TER_Status;132,2955
#define TER_MAX_ERROR_STRING_LENGTH 139,3200
#define TER_EXPLANATION_STRING_LENGTH 141,3276
#define TER_PROGRESS_CODE_LENGTH 143,3351
#define TER_IP_ADDRESS_STRING_LENGTH 145,3425
#define TER_ACTUAL_VOLTAGE_NOT_SUPPORTED	147,3472
#define TER_ACTUAL_CURRENT_NOT_SUPPORTED	148,3521
typedef enum TER_LedState	154,3744
    LedOff	156,3808
    Yellow_Steady	157,3839
    Yellow_Steady	= 0x5,x5157,3839
    Yellow_FlashSlow	158,3898
    Yellow_FlashSlow	= 0x9,x9158,3898
    Yellow_FlashFast	159,3959
    Yellow_FlashFast	= 0xD,xD159,3959
    Green_Steady	160,4021
    Green_Steady	= 0x6,x6160,4021
    Green_FlashSlow	161,4078
    Green_FlashSlow	= 0xA,xA161,4078
    Green_FlashFast	162,4137
    Green_FlashFast	= 0xE,xE162,4137
    Orange_Steady	163,4197
    Orange_Steady	= 0x7,x7163,4197
    Orange_FlashSlow	164,4256
    Orange_FlashSlow	= 0xB,xB164,4256
    Orange_FlashFast	165,4317
    Orange_FlashFast	= 0xF,xF165,4317
    Yellow_Comm	166,4379
    Yellow_Comm		= 0x10,x10166,4379
    Yellow_CommHeartbeat 167,4470
    Yellow_CommHeartbeat = 0x11	x11167,4470
} TER_LedState;168,4568
enum TER_ResetType170,4585
  TER_ResetType_Reset_None 172,4606
  TER_ResetType_Reset_None            = 0x0,x0172,4606
  TER_ResetType_Reset_SendBuffer 173,4670
  TER_ResetType_Reset_SendBuffer      = 0x1,x1173,4670
  TER_ResetType_Reset_ReceiveBuffer 174,4737
  TER_ResetType_Reset_ReceiveBuffer   = 0x2,x2174,4737
  TER_ResetType_Reset_DioSoftReset 175,4807
  TER_ResetType_Reset_DioSoftReset    = 0x4,x4175,4807
  TER_ResetType_Reset_Slot 176,4879
  TER_ResetType_Reset_Slot            = 0x8,x8176,4879
  TER_ResetType_Reset_FPGA 177,4955
  TER_ResetType_Reset_FPGA            = 0x10,x10177,4955
  TER_ResetType_Reset_DioReboot 178,5019
  TER_ResetType_Reset_DioReboot       = 0x20 x20178,5019
enum TER_DebugType181,5087
    TER_DebugType_None	183,5108
    TER_DebugType_None			= 0x0,x0183,5108
    TER_DebugType_ClearDioStatus	184,5158
    TER_DebugType_ClearDioStatus	= 0x1,x1184,5158
    TER_DebugType_PollOffAll	185,5233
    TER_DebugType_PollOffAll		= 0x2,x2185,5233
    TER_DebugType_PollOnAll	186,5305
    TER_DebugType_PollOnAll		= 0x3,x3186,5305
    TER_DebugType_PollOff	187,5375
    TER_DebugType_PollOff		= 0x4,x4187,5375
    TER_DebugType_PollOn	188,5447
    TER_DebugType_PollOn		= 0x5,x5188,5447
typedef enum TER_Notifier191,5521
  TER_Notifier_Cleared	193,5549
  TER_Notifier_Cleared			   = 0x00000,x00000193,5549
  TER_Notifier_FanFault 194,5588
  TER_Notifier_FanFault                    = 0x00002,x00002194,5588
  TER_Notifier_LatchedSlotPcbOverTemp 195,5642
  TER_Notifier_LatchedSlotPcbOverTemp      = 0x00004,x00004195,5642
  TER_Notifier_SlotCircuitOverTemp 196,5696
  TER_Notifier_SlotCircuitOverTemp         = 0x00008,x00008196,5696
  TER_Notifier_DriveRemoved 198,5751
  TER_Notifier_DriveRemoved                = 0x00010,x00010198,5751
  TER_Notifier_DriveOverCurrent 199,5805
  TER_Notifier_DriveOverCurrent            = 0x00040,x00040199,5805
  TER_Notifier_SledRemoved 200,5859
  TER_Notifier_SledRemoved            	   = 0x00080,x00080200,5859
  TER_Notifier_SlotCircuitFault 202,5913
  TER_Notifier_SlotCircuitFault            = 0x00100,x00100202,5913
  TER_Notifier_SledTempSensorFault 203,5967
  TER_Notifier_SledTempSensorFault         = 0x00200,x00200203,5967
  TER_Notifier_LatchedSledOverTemp 204,6021
  TER_Notifier_LatchedSledOverTemp         = 0x00400,x00400204,6021
  TER_Notifier_LatchedSledUnderTemp 205,6075
  TER_Notifier_LatchedSledUnderTemp        = 0x00800,x00800205,6075
  TER_Notifier_SledOverTemp 207,6130
  TER_Notifier_SledOverTemp                = 0x01000,x01000207,6130
  TER_Notifier_SledTemperatureFault 208,6184
  TER_Notifier_SledTemperatureFault        = 0x02000,x02000208,6184
  TER_Notifier_DiodeFault 209,6238
  TER_Notifier_DiodeFault                  = 0x04000,x04000209,6238
  TER_Notifier_SledHeaterFault 211,6293
  TER_Notifier_SledHeaterFault             = 0x10000,x10000211,6293
  TER_Notifier_SledHeaterFaultShort 212,6347
  TER_Notifier_SledHeaterFaultShort        = 0x20000,x20000212,6347
  TER_Notifier_SledHeaterFaultOpen 213,6401
  TER_Notifier_SledHeaterFaultOpen         = 0x40000,x40000213,6401
  TER_Notifier_TempEnvelopeFault 215,6456
  TER_Notifier_TempEnvelopeFault           = 0x01000000,x01000000215,6456
  TER_Notifier_TempRampNotCompleted 216,6513
  TER_Notifier_TempRampNotCompleted        = 0x02000000,x02000000216,6513
} TER_Notifier;219,6572
typedef enum TER_StatusBits221,6589
    TER_IsSlotPresent	224,6697
    TER_IsSlotPresent		=0x00000001,x00000001224,6697
    TER_IsSledPresent	225,6752
    TER_IsSledPresent		=0x00000002,x00000002225,6752
    TER_IsDrivePresent	226,6807
    TER_IsDrivePresent		=0x00000004,x00000004226,6807
    IsTempControlEnabled	228,6864
    IsTempControlEnabled	=0x00000010,x00000010228,6864
    IsTempTargetReached	229,6947
    IsTempTargetReached		=0x00000020,x00000020229,6947
    IsRampUp	231,7039
    IsRampUp			=0x00000040,x00000040231,7039
    IsRampDown	232,7098
    IsRampDown			=0x00000080,x00000080232,7098
    IsFIDReset 234,7157
    IsFIDReset                  =0x00001000,x00001000234,7157
    IsFIDBootStrap 235,7225
    IsFIDBootStrap              =0x00002000,x00002000235,7225
    IsPM2 236,7297
    IsPM2                       =0x00004000,x00004000236,7297
} TER_StatusBits;238,7361
struct TER_SlotStatus 240,7380
typedef struct TER_SlotStatus TER_SlotStatus;260,7826
#define bool 266,7949
struct targetTemperature 268,7976
typedef struct targetTemperature targetTemperature;275,8125
struct dioInfoStatus 277,8178
typedef struct dioInfoStatus dioInfoStatus;281,8242
struct pollArray 283,8287
typedef struct pollArray pollArray;286,8343
#define BB_BUFFER_MAX 288,8380
struct terBigBuffer 289,8407
typedef struct terBigBuffer terBigBuffer;293,8511
#define GET_SLOT_INFO_LEN_8 295,8554
#define GET_SLOT_INFO_LEN_16 296,8586
typedef struct TER_SlotInfo297,8618
} TER_SlotInfo;307,9013
struct TER_SlotSettings309,9030
typedef struct TER_SlotSettings TER_SlotSettings;322,9359
} TER_HtempInfo;346,10366
#define NEPTUNE_DIO_CMD_SIZE 349,10386
#define NEPTUNE_SLOTID_MAX 350,10417
#define NEPTUNE_RECEIVE_PACKET_LEN_MAX 351,10448
#define TER_TCP_COMMAND_RESET_DIO 359,10548
#define TER_TCP_COMMAND_PING 360,10594
#define TER_TCP_COMMAND_DIO_COMMAND 362,10688
#define TER_TCP_COMMAND_set_registers 363,10734
#define TER_TCP_COMMAND_get_registers 364,10780
#define TER_TCP_COMMAND_modify_registers 365,10826
#define TER_TCP_COMMAND_get_sio_info_status 366,10873
#define TER_TCP_COMMAND_Sio_Receive_Huge_Buffer 367,10920
#define TER_TCP_COMMAND_SEND_BUFFER 368,10970
#define TER_TCP_COMMAND_SEND_BUFFER_ACK 369,11016
#define TER_TCP_COMMAND_SetInterCharacterDelay 371,11063
#define TER_TCP_COMMAND_GetInterCharacterDelay 372,11113
#define TER_TCP_COMMAND_SetACKTimeout 374,11164
#define TER_TCP_COMMAND_GetACKTimeout 375,11214
#define TER_TCP_COMMAND_HugeBufferWriteRead 377,11265
#define TER_TCP_COMMAND_ForceSingleByteTransmit 379,11316
#define TER_TCP_COMMAND_TwoByteOneByte 381,11368
#define TER_TCP_COMMAND_GetLastErrors 383,11419
#define TER_TCP_COMMAND_ClearTxHalt 385,11470
#define TER_TCP_COMMAND_ClearCurrentJournal 387,11521
#define TER_TCP_COMMAND_SetJournalMask 388,11571
#define TER_TCP_COMMAND_SnapshotCurrentJournal 389,11621
#define TER_TCP_COMMAND_StamperToString 390,11671
#define TER_TCP_COMMAND_SetTemperatureEnvelope 392,11722
#define TER_TCP_COMMAND_GetTemperatureEnvelope 393,11772
#define TER_TCP_COMMAND_IsDioPresent 395,11823
#define TER_TCP_COMMAND_UpgradeMicrocode 397,11874
#define TER_TCP_COMMAND_Read9240Register 399,11925
#define TER_TCP_COMMAND_Write9240Register 400,11975
#define TER_TCP_COMMAND_LoadFieldScreen 401,12025
#define TER_TCP_COMMAND_EnableCmd9Polling 403,12076
#define TER_TCP_COMMAND_GetCmd9PollArray 404,12126
#define TER_TCP_COMMAND_SetFanDutyCycle 405,12176
#define TER_TCP_COMMAND_SetInterPacketDelay 406,12226
#define TER_TCP_COMMAND_Set5V12VSequenceTime 407,12276
#define TER_TCP_COMMAND_siInitialize 410,12379
#define TER_TCP_COMMAND_Dio_Command 414,12453
#define TER_TCP_COMMAND_Read_Fpga_Register 415,12501
#define TER_TCP_COMMAND_Write_Fpga_Register 416,12549
#define TER_TCP_COMMAND_Sio_Send_Buffer 417,12597
#define TER_TCP_COMMAND_Sio_Receive_Buffer 418,12645
#define TER_TCP_COMMAND_Set_Serial_Parameters 419,12693
#define TER_TCP_COMMAND_Set_Serial_Enable 420,12741
#define TER_TCP_COMMAND_Set_Power_Enabled 421,12789
#define TER_TCP_COMMAND_PingXDR 422,12837
#define TER_TCP_COMMAND_ResetSlot 423,12885
#define TER_TCP_COMMAND_SetDioPollOptions 424,12933
#define TER_TCP_COMMAND_SioReboot 425,12981
#define TER_TCP_COMMAND_SetSerialSelect 426,13029
#define TER_TCP_COMMAND_GetDIOInfoStatus 427,13077
#define TER_TCP_COMMAND_IsSlotThere 428,13125
#define TER_TCP_COMMAND_SetSerialLevels 429,13173
#define TER_TCP_COMMAND_GetSlotSettings 430,13221
#define TER_TCP_COMMAND_SetTargetTemperature 431,13269
#define TER_TCP_COMMAND_SetTempControlEnable 432,13317
#define TER_TCP_COMMAND_GetSlotStatus 433,13365
#define TER_TCP_COMMAND_SetPowerVoltage 434,13413
#define TER_TCP_COMMAND_GetSlotInfo 435,13461
#define TER_TCP_COMMAND_GetUserString 436,13509
#define TER_TCP_COMMAND_SetUserString 437,13557
#define TER_TCP_COMMAND_SetSignal 438,13605
#define TER_TCP_COMMAND_IsDrivePresent 439,13653
#define TER_TCP_COMMAND_GetErrorLog 440,13701
#define TER_TCP_COMMAND_Read_N_Fpga_Register 441,13749
#define TER_TCP_COMMAND_StartSlotPoll 442,13797
#define TER_TCP_COMMAND_GetSlotPoll 443,13845
#define TER_TCP_COMMAND_DioMultiCmd 444,13893
#define TER_TCP_COMMAND_GetTargetTemperature 445,13941
#define XTER_TCP_COMMAND_Dio_Command 447,13990
#define XTER_TCP_COMMAND_Read_Fpga_Register 448,14048
#define XTER_TCP_COMMAND_Write_Fpga_Register 449,14106
#define XTER_TCP_COMMAND_Sio_Send_Buffer 450,14164
#define XTER_TCP_COMMAND_Sio_Receive_Buffer 451,14222
#define XTER_TCP_COMMAND_Set_Serial_Parameters 452,14280
#define XTER_TCP_COMMAND_Set_Serial_Enable 453,14338
#define XTER_TCP_COMMAND_Set_Power_Enabled 454,14396
#define XTER_TCP_COMMAND_PingXDR 455,14454
#define XTER_TCP_COMMAND_ResetSlot 456,14512
#define XTER_TCP_COMMAND_SetDioPollOptions 457,14570
#define XTER_TCP_COMMAND_SioReboot 458,14628
#define XTER_TCP_COMMAND_SetSerialSelect 459,14686
#define XTER_TCP_COMMAND_GetDIOInfoStatus 460,14744
#define XTER_TCP_COMMAND_IsSlotThere 461,14802
#define XTER_TCP_COMMAND_SetSerialLevels 462,14860
#define XTER_TCP_COMMAND_GetSlotSettings 463,14918
#define XTER_TCP_COMMAND_SetTargetTemperature 464,14976
#define XTER_TCP_COMMAND_SetTempControlEnable 465,15034
#define XTER_TCP_COMMAND_GetSlotStatus 466,15092
#define XTER_TCP_COMMAND_SetPowerVoltage 467,15150
#define XTER_TCP_COMMAND_GetSlotInfo 468,15208
#define XTER_TCP_COMMAND_GetUserString 469,15266
#define XTER_TCP_COMMAND_SetUserString 470,15324
#define XTER_TCP_COMMAND_SetSignal 471,15382
#define XTER_TCP_COMMAND_IsDrivePresent 472,15440
#define XTER_TCP_COMMAND_GetErrorLog 473,15498
#define XTER_TCP_COMMAND_Read_N_Fpga_Register 474,15556
#define XTER_TCP_COMMAND_StartSlotPoll 475,15614
#define XTER_TCP_COMMAND_GetSlotPoll 476,15672
#define XTER_TCP_COMMAND_DioMultiCmd 477,15730
#define XTER_TCP_COMMAND_GetTargetTemperature 478,15788
#define MARTER_TCP_COMMAND_ResetSlot 482,15896
#define MARTER_TCP_COMMAND_Set_Power_Enabled 483,15950
#define MARTER_TCP_COMMAND_Set_Serial_Parameters 484,16004
#define MARTER_TCP_COMMAND_Set_Serial_Enable 485,16058
#define MARTER_TCP_COMMAND_Sio_Send_Buffer 486,16112
#define MARTER_TCP_COMMAND_Sio_Receive_Buffer 487,16166
#define MARTER_TCP_COMMAND_IsSlotThere 488,16220
#define MARTER_TCP_COMMAND_GetSlotInfo 489,16274
#define MARTER_TCP_COMMAND_GetSlotSettings 490,16328
#define MARTER_TCP_COMMAND_GetSlotStatus 491,16382
#define MARTER_TCP_COMMAND_GetUserString 492,16436
#define MARTER_TCP_COMMAND_SetUserString 493,16490
#define MARTER_TCP_COMMAND_SetTempControlEnable 494,16544
#define MARTER_TCP_COMMAND_SetTargetTemperature 495,16598
#define MARTER_TCP_COMMAND_SetPowerVoltage 496,16652
#define MARTER_TCP_COMMAND_SetSerialLevels 497,16706
#define MARTER_TCP_COMMAND_SetSerialSelect 498,16760
#define MARTER_TCP_COMMAND_SetSignal 499,16814
#define MARTER_TCP_COMMAND_Debug	500,16868
#define MARTER_TCP_COMMAND_GetTargetTemperature 503,16917
#define MARTER_TCP_COMMAND_DioCmd 506,17002
#define MARTER_TCP_COMMAND_IsDrivePresent 509,17093
#define MARTER_TCP_COMMAND_Dio_Command 516,17408
#define MARTER_TCP_COMMAND_Read_Fpga_Register 517,17462
#define MARTER_TCP_COMMAND_Write_Fpga_Register 518,17516
#define MARTER_TCP_COMMAND_PingXDR 519,17570
#define TER_Status_none 527,17698
#define TER_Status_dio_timeout 528,17742
#define TER_Status_socket_not_open 529,17786
#define TER_Status_slotid_error 530,17830
#define TER_Status_Invalid_Mode 531,17874
#define TER_Status_Error_Argument_Invalid 532,17966
#define TER_Status_receive_packet_len_err 533,18057
#define TER_Status_invalid_reset_type 534,18101
#define TER_Status_data_length_error 535,18145
#define TER_Status_linux_error 536,18189
#define TER_Status_send_buffer_already_in_progress 537,18233
#define TER_Status_not_safe_to_transmit 538,18287
#define TER_Status_no_room_in_output_silo 539,18332
#define TER_Status_file_not_found 540,18377
#define TER_Status_cant_open_file 541,18422
#define TER_Status_cant_read_file 542,18467
#define TER_Status_ucode_update_errors 543,18512
#define TER_Status_unknown_status 544,18557
#define TER_Status_Buffer_Overflow 545,18602
#define TER_Status_missing_tuple 546,18647
#define TER_Status_drive_power_off 547,18692
#define TER_Status_dio_sequence_error 548,18737
#define TER_Status_rpc_fail 549,18782
#define TER_Status_Timeout 550,18827
#define TER_Status_NotImplemented 551,18872
#define TER_Status_Read_Only_Value 552,18917
#define TER_Status_Unknown_Pseudo_Addr 553,18962
#define TER_Status_Invalid_Baud_Rate 554,19007
#define TER_Status_Invalid_Stop_Bits 555,19052
#define TER_Status_Not_Supported 556,19097
#define TER_Status_No_Target_Temp 557,19142
#define TER_Status_ucode_upgrade_busy 558,19187
#define TER_Status_dio_invalid_request 559,19232
#define TER_Status_ucode_file_too_big 560,19277
#define TER_Status_no_client_connection 561,19322
#define TER_Status_high_ucode_ugrade_cnt 562,19367
#define TER_Status_DIO_STATUS_timed_out 565,19476
#define TER_Status_DIO_STATUS_slot_busy 566,19553
#define TER_Status_DIO_STATUS_no_dio 567,19610
#define TER_Status_DIO_STATUS_slotid_out_of_range 568,19667
#define TER_Status_DIO_STATUS_cant_recover_from_error 569,19724
#define TER_Status_DIO_STATUS_retrys_exhausted 570,19781
#define TER_Status_DIO_STATUS_bad_slot_number 571,19838
#define TER_Status_DIO_STATUS_command_drained 572,19895
#define TER_Status_DIO_STATUS_response_out_of_seq 573,19952
#define TER_Status_DIO_STATUS_dio_reported_error 574,20009
#define TER_Status_DIO_STATUS_command_mismatch 575,20066
#define TER_Status_DIO_STATUS_dio_rx_cksum_error 576,20123
#define TER_Status_DIO_STATUS_force_25msec_error 577,20180
#define TER_Status_64k_count_exceeded 580,20279
#define TER_Status_transmitter_is_halted 581,20324
#define TER_Status_invalid_super_state_case 584,20397
#define TER_Status_extra_receive_chars_from_dio 587,20477
enum registerable_event_enum 591,20663
  registerable_event_drive_present 592,20694
typedef struct slot_mask_struct 597,20757
} SLOT_MASK;599,20823
struct modifyRegistersStruct 601,20837
typedef struct modifyRegistersStruct modifyRegistersStruct;606,20962
struct setRegistersStruct 608,21023
typedef struct setRegistersStruct setRegistersStruct;612,21118
struct getRegistersCmdStruct 614,21173
typedef struct getRegistersCmdStruct getRegistersCmdStruct;617,21240
struct getRegistersRespStruct 619,21301
typedef struct getRegistersRespStruct getRegistersRespStruct;622,21367
class Neptune_sio2624,21430
  bool ss_check_slotid Neptune_sio2::ss_check_slotid648,21905
  int get_touple_count Neptune_sio2::get_touple_count663,22215
  unsigned int encodeRocketNetLen Neptune_sio2::encodeRocketNetLen753,23956
  int decodeRocketNetLen Neptune_sio2::decodeRocketNetLen765,24155
  unsigned int do_recv Neptune_sio2::do_recv775,24300
  unsigned int do_send Neptune_sio2::do_send813,25032
  unsigned int get_file_size Neptune_sio2::get_file_size833,25470
  Neptune_sio2 Neptune_sio2::Neptune_sio2849,25734
  Neptune_sio2 Neptune_sio2::Neptune_sio2873,26197
  virtual ~Neptune_sio2 Neptune_sio2::~Neptune_sio2895,26612
 typedef struct cmd9_status_struct_t Neptune_sio2::cmd9_status_struct_t1001,29431
 } CMD9_STATUS;Neptune_sio2::CMD9_STATUS1004,29610
  TER_Status TER_Connect Neptune_sio2::TER_Connect1376,37919
  TER_Status TER_EnableMarshal Neptune_sio2::TER_EnableMarshal1733,48683
  typedef enum ns2_journal_mask_e Neptune_sio2::ns2_journal_mask_e1741,48820
    NS2_Journal_none Neptune_sio2::ns2_journal_mask_e::NS2_Journal_none1742,48856
    NS2_Journal_states Neptune_sio2::ns2_journal_mask_e::NS2_Journal_states1743,48882
    NS2_Journal_states = 0x100 Neptune_sio2::ns2_journal_mask_e::x1001743,48882
  } NS2_JOURNAL_MASK;Neptune_sio2::NS2_JOURNAL_MASK1744,48931
#define SMALL_STAMPER1746,48954
  typedef struct stamper_struct Neptune_sio2::stamper_struct1750,49063
  } STAMPER;Neptune_sio2::STAMPER1771,49738
  typedef struct ns2_journal_struct_t Neptune_sio2::ns2_journal_struct_t1773,49752
  } NS2_JOURNAL_BUFFER;Neptune_sio2::NS2_JOURNAL_BUFFER1776,49858
  int TER_GetStamperSlotNumber Neptune_sio2::TER_GetStamperSlotNumber1781,49919
  int TER_StamperIsSetJournalMask Neptune_sio2::TER_StamperIsSetJournalMask1788,50041

../slotio/neptune_sio2_rpc.h,10752
#define _NEPTUNE_SIO2_RPC_H_RPCGEN7,110
typedef char okBuffer[okBuffer18,236
typedef char timeStamp[timeStamp20,263
typedef u_int XTER_Status;22,291
typedef char DIO_COMMAND[DIO_COMMAND24,319
typedef char DIO_RESPONSE[DIO_RESPONSE26,349
} SEND_BUFFER;31,445
} RECEIVE_BUFFER;36,532
typedef char POLL_ARRAY[POLL_ARRAY38,551
enum XTER_ResetType 40,580
	XTER_ResetType_Reset_None 41,602
	XTER_ResetType_Reset_None = 0x0,x041,602
	XTER_ResetType_Reset_SendBuffer 42,636
	XTER_ResetType_Reset_SendBuffer = 0x1,x142,636
	XTER_ResetType_Reset_ReceiveBuffer 43,676
	XTER_ResetType_Reset_ReceiveBuffer = 0x2,x243,676
	XTER_ResetType_Reset_Slot 44,719
	XTER_ResetType_Reset_Slot = 0x4,x444,719
	XTER_ResetType_Reset_FPGA 45,753
	XTER_ResetType_Reset_FPGA = 0x8,x845,753
	XTER_ResetType_Reset_DioSoftReset 46,787
	XTER_ResetType_Reset_DioSoftReset = 0x10,x1046,787
	XTER_ResetType_Reset_DioReboot 47,830
	XTER_ResetType_Reset_DioReboot = 0x20,x2047,830
typedef enum XTER_ResetType XTER_ResetType;49,873
typedef char SLOT_MASKc[SLOT_MASKc51,918
struct TER_DioMultiCmd_cmd 53,948
typedef struct TER_DioMultiCmd_cmd TER_DioMultiCmd_cmd;57,1033
struct TER_DioMultiCmd_resp 59,1090
typedef struct TER_DioMultiCmd_resp TER_DioMultiCmd_resp;63,1157
struct TER_StartSlotPoll_cmd 65,1216
typedef struct TER_StartSlotPoll_cmd TER_StartSlotPoll_cmd;72,1346
struct TER_StartSlotPoll_resp 74,1407
typedef struct TER_StartSlotPoll_resp TER_StartSlotPoll_resp;78,1476
struct TER_GetSlotPoll_cmd 80,1539
typedef struct TER_GetSlotPoll_cmd TER_GetSlotPoll_cmd;83,1584
struct TER_GetSlotPoll_resp 85,1641
typedef struct TER_GetSlotPoll_resp TER_GetSlotPoll_resp;93,1795
struct TER_SetSignal_cmd 95,1854
typedef struct TER_SetSignal_cmd TER_SetSignal_cmd;101,1949
struct TER_SetSignal_resp 103,2002
typedef struct TER_SetSignal_resp TER_SetSignal_resp;110,2109
struct TER_GetErrorLog_cmd 112,2164
typedef struct TER_GetErrorLog_cmd TER_GetErrorLog_cmd;115,2209
struct TER_GetErrorLog_resp 117,2266
typedef struct TER_GetErrorLog_resp TER_GetErrorLog_resp;126,2425
struct TER_IsDrivePresent_cmd 128,2484
typedef struct TER_IsDrivePresent_cmd TER_IsDrivePresent_cmd;132,2547
struct TER_IsDrivePresent_resp 134,2610
typedef struct TER_IsDrivePresent_resp TER_IsDrivePresent_resp;142,2745
struct TER_GetUserString_cmd 144,2810
typedef struct TER_GetUserString_cmd TER_GetUserString_cmd;148,2872
struct TER_GetUserString_resp 150,2933
typedef struct TER_GetUserString_resp TER_GetUserString_resp;158,3066
struct TER_SetUserString_cmd 160,3129
typedef struct TER_SetUserString_cmd TER_SetUserString_cmd;165,3213
struct TER_SetUserString_resp 167,3274
typedef struct TER_SetUserString_resp TER_SetUserString_resp;174,3385
struct TER_GetSlotInfo_cmd 176,3448
typedef struct TER_GetSlotInfo_cmd TER_GetSlotInfo_cmd;180,3508
struct TER_GetSlotInfo_resp 182,3565
typedef struct TER_GetSlotInfo_resp TER_GetSlotInfo_resp;196,3861
struct TER_SetPowerVoltage_cmd 198,3920
typedef struct TER_SetPowerVoltage_cmd TER_SetPowerVoltage_cmd;204,4024
struct TER_SetPowerVoltage_resp 206,4089
typedef struct TER_SetPowerVoltage_resp TER_SetPowerVoltage_resp;213,4202
struct TER_GetSlotStatus_cmd 215,4269
typedef struct TER_GetSlotStatus_cmd TER_GetSlotStatus_cmd;219,4331
struct TER_GetSlotStatus_resp 221,4392
typedef struct TER_GetSlotStatus_resp TER_GetSlotStatus_resp;244,4904
struct TER_SetTempControlEnable_cmd 246,4967
typedef struct TER_SetTempControlEnable_cmd TER_SetTempControlEnable_cmd;251,5052
struct TER_SetTempControlEnable_resp 253,5127
typedef struct TER_SetTempControlEnable_resp TER_SetTempControlEnable_resp;260,5245
struct TER_SetTargetTemperature_cmd 262,5322
typedef struct TER_SetTargetTemperature_cmd TER_SetTargetTemperature_cmd;271,5509
struct TER_SetTargetTemperature_resp 273,5584
typedef struct TER_SetTargetTemperature_resp TER_SetTargetTemperature_resp;280,5702
struct TER_GetTargetTemperature_cmd 282,5779
typedef struct TER_GetTargetTemperature_cmd TER_GetTargetTemperature_cmd;286,5848
struct TER_GetTargetTemperature_resp 288,5923
typedef struct TER_GetTargetTemperature_resp TER_GetTargetTemperature_resp;300,6159
struct TER_GetSlotSettings_cmd 302,6236
typedef struct TER_GetSlotSettings_cmd TER_GetSlotSettings_cmd;306,6300
struct TER_GetSlotSettings_resp 308,6365
typedef struct TER_GetSlotSettings_resp TER_GetSlotSettings_resp;325,6743
struct TER_SetSerialLevels_cmd 327,6810
typedef struct TER_SetSerialLevels_cmd TER_SetSerialLevels_cmd;332,6896
struct TER_SetSerialLevels_resp 334,6961
typedef struct TER_SetSerialLevels_resp TER_SetSerialLevels_resp;341,7074
struct TER_IsSlotThere_cmd 343,7141
typedef struct TER_IsSlotThere_cmd TER_IsSlotThere_cmd;347,7201
struct TER_IsSlotThere_resp 349,7258
typedef struct TER_IsSlotThere_resp TER_IsSlotThere_resp;356,7367
struct TER_GetDioInfoStatus_cmd 358,7426
typedef struct TER_GetDioInfoStatus_cmd TER_GetDioInfoStatus_cmd;361,7476
struct TER_GetDioInfoStatus_resp 363,7543
typedef struct TER_GetDioInfoStatus_resp TER_GetDioInfoStatus_resp;370,7677
struct TER_SetSerialSelect_cmd 372,7746
typedef struct TER_SetSerialSelect_cmd TER_SetSerialSelect_cmd;377,7820
struct TER_SetSerialSelect_resp 379,7885
typedef struct TER_SetSerialSelect_resp TER_SetSerialSelect_resp;386,7998
struct TER_SioReboot_cmd 388,8065
typedef struct TER_SioReboot_cmd TER_SioReboot_cmd;391,8110
struct TER_SioReboot_resp 393,8163
typedef struct TER_SioReboot_resp TER_SioReboot_resp;399,8257
struct TER_SetDioPollOptions_cmd 401,8312
typedef struct TER_SetDioPollOptions_cmd TER_SetDioPollOptions_cmd;405,8395
struct TER_SetDioPollOptions_resp 407,8464
typedef struct TER_SetDioPollOptions_resp TER_SetDioPollOptions_resp;411,8537
struct TER_ResetSlot_cmd 413,8608
typedef struct TER_ResetSlot_cmd TER_ResetSlot_cmd;418,8699
struct TER_ResetSlot_resp 420,8752
typedef struct TER_ResetSlot_resp TER_ResetSlot_resp;427,8859
struct TER_PingXDR_cmd 429,8914
typedef struct TER_PingXDR_cmd TER_PingXDR_cmd;433,8970
struct TER_PingXDR_resp 435,9019
typedef struct TER_PingXDR_resp TER_PingXDR_resp;441,9110
struct TER_SetPowerEnabled_cmd 443,9161
typedef struct TER_SetPowerEnabled_cmd TER_SetPowerEnabled_cmd;449,9259
struct TER_SetPowerEnabled_resp 451,9324
typedef struct TER_SetPowerEnabled_resp TER_SetPowerEnabled_resp;458,9437
struct TER_SetSerialEnable_cmd 460,9504
typedef struct TER_SetSerialEnable_cmd TER_SetSerialEnable_cmd;465,9584
struct TER_SetSerialEnable_resp 467,9649
typedef struct TER_SetSerialEnable_resp TER_SetSerialEnable_resp;474,9762
struct TER_SetSerialParameters_cmd 476,9829
typedef struct TER_SetSerialParameters_cmd TER_SetSerialParameters_cmd;482,9930
struct TER_SetSerialParameters_resp 484,10003
typedef struct TER_SetSerialParameters_resp TER_SetSerialParameters_resp;491,10120
struct TER_ReceiveBuffer_cmd 493,10195
typedef struct TER_ReceiveBuffer_cmd TER_ReceiveBuffer_cmd;499,10304
struct TER_ReceiveBuffer_resp 501,10365
typedef struct TER_ReceiveBuffer_resp TER_ReceiveBuffer_resp;511,10556
struct TER_SendBuffer_cmd 513,10619
typedef struct TER_SendBuffer_cmd TER_SendBuffer_cmd;518,10699
struct TER_SendBuffer_resp 520,10754
typedef struct TER_SendBuffer_resp TER_SendBuffer_resp;527,10862
struct TER_WriteFpgaRegister_cmd 529,10919
typedef struct TER_WriteFpgaRegister_cmd TER_WriteFpgaRegister_cmd;533,10983
struct TER_WriteFpgaRegister_resp 535,11052
typedef struct TER_WriteFpgaRegister_resp TER_WriteFpgaRegister_resp;538,11112
struct TER_ReadFpgaRegister_cmd 540,11183
typedef struct TER_ReadFpgaRegister_cmd TER_ReadFpgaRegister_cmd;543,11233
struct TER_ReadFpgaRegister_resp 545,11300
typedef struct TER_ReadFpgaRegister_resp TER_ReadFpgaRegister_resp;549,11376
struct TER_ReadNFpgaRegister_cmd 551,11445
typedef struct TER_ReadNFpgaRegister_cmd TER_ReadNFpgaRegister_cmd;557,11539
struct TER_ReadNFpgaRegister_resp 559,11608
typedef struct TER_ReadNFpgaRegister_resp TER_ReadNFpgaRegister_resp;566,11736
struct dio_cmd 568,11807
typedef struct dio_cmd dio_cmd;572,11858
struct dio_cmd_resp 574,11891
typedef struct dio_cmd_resp dio_cmd_resp;579,11969
#define YPBINDPROG 581,12012
#define YPBINDVERS 582,12033
#define XTER_DioCommand 585,12101
#define XTER_Read_Fpga_Register 588,12292
#define XTER_Read_N_Fpga_Register 591,12574
#define XTER_Write_Fpga_Register 594,12868
#define XTER_Send_Buffer 597,13158
#define XTER_Receive_Buffer 600,13392
#define XTER_Set_Serial_Parameters 603,13650
#define XTER_Set_Serial_Enable 606,13956
#define XTER_Set_Power_Enabled 609,14230
#define XTER_PingXDR 612,14504
#define XTER_ResetSlot 615,14706
#define XTER_SetDioPollOptions 618,14924
#define XTER_SioReboot 621,15206
#define XTER_SetSerialSelect 624,15424
#define XTER_GetDIOInfoStatus 627,15690
#define XTER_IsSlotThere 630,15964
#define XTER_SetSerialLevels 633,16198
#define XTER_GetSlotSettings 636,16464
#define XTER_SetTargetTemperature 639,16730
#define XTER_GetTargetTemperature 642,17036
#define XTER_SetTempControlEnable 645,17342
#define XTER_GetSlotStatus 648,17648
#define XTER_SetPowerVoltage 651,17926
#define XTER_GetSlotInfo 654,18220
#define XTER_GetUserString 657,18482
#define XTER_SetUserString 660,18760
#define XTER_IsDrivePresent 663,19038
#define XTER_GetErrorLog 666,19324
#define XTER_SetSignal 669,19586
#define XTER_StartSlotPoll 672,19832
#define XTER_GetSlotPoll 675,20110
#define XTER_DioMultiCmd 678,20372
#define XTER_DioCommand 684,20731
#define XTER_Read_Fpga_Register 687,20876
#define XTER_Read_N_Fpga_Register 690,21078
#define XTER_Write_Fpga_Register 693,21290
#define XTER_Send_Buffer 696,21498
#define XTER_Receive_Buffer 699,21664
#define XTER_Set_Serial_Parameters 702,21848
#define XTER_Set_Serial_Enable 705,22068
#define XTER_Set_Power_Enabled 708,22264
#define XTER_PingXDR 711,22460
#define XTER_ResetSlot 714,22600
#define XTER_SetDioPollOptions 717,22752
#define XTER_SioReboot 720,22952
#define XTER_SetSerialSelect 723,23104
#define XTER_GetDIOInfoStatus 726,23292
#define XTER_IsSlotThere 729,23486
#define XTER_SetSerialLevels 732,23650
#define XTER_GetSlotSettings 735,23838
#define XTER_SetTargetTemperature 738,24026
#define XTER_GetTargetTemperature 741,24244
#define XTER_SetTempControlEnable 744,24462
#define XTER_GetSlotStatus 747,24680
#define XTER_SetPowerVoltage 750,24870
#define XTER_GetSlotInfo 753,25072
#define XTER_GetUserString 756,25250
#define XTER_SetUserString 759,25440
#define XTER_IsDrivePresent 762,25630
#define XTER_GetErrorLog 765,25826
#define XTER_SetSignal 768,26004
#define XTER_StartSlotPoll 771,26170
#define XTER_GetSlotPoll 774,26360
#define XTER_DioMultiCmd 777,26538

../slotio/tcTypes.h,290
#define _TCTYPES_H_2,20
typedef unsigned long Dword;5,42
typedef unsigned short Word;6,71
typedef unsigned char Byte;7,100
typedef struct cell_card_inventory_block 9,129
} CELL_CARD_INVENTORY_BLOCK;25,562
#define PRINTF_STYLE(33,633
#define TCPRINTF(38,785
  void tcPrintf(56,1486

../slotio/updatediofw.cpp,201
#define MAX_SLOTS 45,581
#define UPDATE_DIO_FW_FORCE 46,607
#define UPDATE_DIO_FW_GET_INFO 47,641
} parm;53,715
void getDIOTPN(57,726
void *update_dio_fw(update_dio_fw83,1259
int main(146,3342

../slotio/ver.h,46
#define __ver_h__2,18
#define BUILD_NO 6,64

../testscript/gaia.c,581
#define tcPrintf 3,17
int main(6,122
pthread_mutex_t mutex_slotio;48,1027
Byte siInitialize(51,1135
Byte siFinalize(59,1380
Byte isDrivePlugged(67,1621
Byte setTargetTemperature(75,1858
Byte getCurrentTemperature(83,2163
Byte setSafeHandlingTemperature(91,2479
Byte setTargetVoltage(99,2796
Byte getCurrentVoltage(107,3135
Byte getVoltageErrorStatus(115,3495
Byte getTemperatureErrorStatus(123,3766
Byte setVoltageRiseTime(131,4045
Byte setVoltageInterval(139,4380
Byte setUartPullupVoltage(147,4693
Byte getCellInventory(155,5026
Byte siReadDriveMemory(168,5432

../testscript/libts.h,23
#define _LIBTS_H_2,18

../testscript/tsAbort.c,68
Byte requestDriveTestAbort(13,348
Byte requestDriveUnload(56,1585

../testscript/tsCom.c,176
Byte driveIoCtrl(16,477
Byte EndianSwaponSectorBuffer(218,6972
Byte driveIoCtrlByKeywordWithRetry(255,8699
Byte Getdriveerrorcode(440,14703
Byte GetdrivePespage(462,15371

../testscript/tsEnv.c,213
#define  RECEIVE_BUFFER_ID 2,16
Byte dumpCellInventoryData(12,248
Byte getEnvironmentStatus(59,1772
Byte isEnvironmentError(91,2734
Byte turnDrivePowerSupplyOn(137,3956
Byte turnDrivePowerSupplyOff(250,7357

../testscript/tsError.c,30
Byte createErrorCode(73,2799

../testscript/ts.h,16425
#define _TS_H_2,15
#define BLOCKSIZE 28,802
#define ZData 29,824
#define ZCmd 30,849
#define ZUpload 31,874
#define TEST_TIME 32,897
#define FINAL_MODE 33,923
#define BLOCKSIZE 53,1518
#define ZData 54,1540
#define ZCmd 55,1565
#define ZUpload 56,1590
  NUM_OF_CELL_CONTROLLER_TASK 87,2510
  TOP_OF_CELL_CONTROLLER_TASK_ID 105,3108
  TOP_OF_CELL_CONTROLLER_TASK_ID = 0x101,x101105,3108
  MATCH 108,3217
  WRITE_TO_DRIVE 111,3265
  READ_FROM_DRIVE 112,3287
  READ_DRIVE_MEMORY_PROTOCOL 115,3349
  READ_DRIVE_MEMORY_PROTOCOL = 0x41,x41115,3349
  WRITE_DRIVE_MEMORY_PROTOCOL 116,3386
  WRITE_DRIVE_MEMORY_PROTOCOL = 0x42,x42116,3386
  IDENTIFY_DRIVE_PROTOCOL 117,3424
  IDENTIFY_DRIVE_PROTOCOL = 0x43,x43117,3424
  IS_DIRECT_ACCESS 120,3510
  IS_INDIRECT_ACCESS,121,3534
  IS_IDENTIFY_ACCESS,122,3556
  IS_DIRECT_ACCESS_WITH_OFFSET,123,3578
  IS_INDIRECT_ACCESS_WITH_OFFSET,124,3610
  IS_ENDIAN_8BIT 127,3696
  IS_ENDIAN_16BIT_LITTLE_TO_8BIT,128,3718
  IS_ENDIAN_32BIT_LITTLE_TO_8BIT,129,3752
  IS_ENDIAN_16BIT_LITTLE_TO_16BIT,130,3786
  IS_ENDIAN_32BIT_LITTLE_TO_32BIT,131,3821
  IS_ENDIAN_16BIT_BIG_TO_16BIT,132,3856
  IS_REPORT_NOT_REQUIRED 135,3940
  IS_REPORT_BEFORE_RAWDATA_DUMP 136,3970
  IS_REPORT_AFTER_RAWDATA_DUMP 137,4007
  IS_GET_BEFORE_REPORT_AFTER_RAWDATA_DUMP 138,4043
  IS_REPORT_BEFORE_RAWDATA_DUMP_ONLY_SRST 139,4090
  IS_REPORT_BEFORE_RAWDATA_DUMP_ONLY_FINAL 140,4164
  IS_GET_BEFORE_REPORT_AFTER_RAWDATA_DUMP_ONLY_SRST 141,4239
  IS_GET_BEFORE_REPORT_AFTER_RAWDATA_DUMP_ONLY_FINAL 142,4324
  IS_REPORTING_COMPLETE 171,5868
  IS_REPORTING_COMPLETE = 0x00,x00171,5868
  IS_UNDER_REPORTING_MODE 172,5900
  IS_UNDER_REPORTING_MODE = 0x01,x01172,5900
  IS_RAWDATA_READY 173,5934
  IS_RAWDATA_READY = 0x02,x02173,5934
  IS_RAWDATA_TRANSFER_COMP 174,5961
  IS_RAWDATA_TRANSFER_COMP = ~0x02,174,5961
  IS_RETRY_REQUEST 175,5997
  IS_RETRY_REQUEST = 0x04,x04175,5997
  IS_CLEAR_RETRY_REQUEST 176,6024
  IS_CLEAR_RETRY_REQUEST = ~0x04,176,6024
  IS_STOP_REQ_FROM_SRST 178,6101
  IS_STOP_REQ_FROM_SRST = 0x08,x08178,6101
  IS_MEMORY_REPORTING_COMP 179,6133
  IS_MEMORY_REPORTING_COMP = ~0x08,179,6133
  IS_PES_DATA_READY 180,6169
  IS_PES_DATA_READY          = 0x10,x10180,6169
  IS_FFT_DATA_AVAILABLE 181,6206
  IS_FFT_DATA_AVAILABLE = 0x10,x10181,6206
  IS_PARAMETRIC_DATA_READY 182,6323
  IS_PARAMETRIC_DATA_READY   = 0x20,x20182,6323
  IS_MCS_DATA_AVAILABLE 183,6394
  IS_MCS_DATA_AVAILABLE = 0x20,x20183,6394
  IS_UNDER_DATA_SETUP_PROCESS 184,6465
  IS_UNDER_DATA_SETUP_PROCESS = 0x40,x40184,6465
  IS_ERROR_AT_SETUP 185,6503
  IS_ERROR_AT_SETUP = 0x80,x80185,6503
  IS_REPORTING_ERROR_FLAG 186,6531
  IS_REPORTING_ERROR_FLAG    = 0x80,x80186,6531
  IS_GRADING_MODEL 187,6568
  IS_GRADING_MODEL           = 0x200,x200187,6568
  IS_GRADING_MODEL_CLEAR 188,6606
  IS_GRADING_MODEL_CLEAR     = ~0x200,188,6606
  IS_CLEAR_REPORTING_TIMER 189,6645
  IS_CLEAR_REPORTING_TIMER   = ~0x8000,189,6645
  CLEAR_TIMER_BYTE 190,6685
  CLEAR_TIMER_BYTE = 0x80,x80190,6685
  IS_GET_TEMPERATURE 207,7231
  IS_GET_TEMPERATURE = 0x01,x01207,7231
  IS_GET_SRST_STEP 208,7260
  IS_GET_SRST_STEP = 0x02,x02208,7260
  IS_GET_STATUS_AND_CONTROL 209,7287
  IS_GET_STATUS_AND_CONTROL = 0x04,x04209,7287
  IS_RAWDATA_READ_STATUS 210,7323
  IS_RAWDATA_READ_STATUS = 0x08,x08210,7323
  IS_TEST_TIME_OUT 227,7915
  IS_TEST_TIME_OUT = 0x01,x01227,7915
  IS_EMERGENCY_POWER_SHUTDOWN 228,7942
  IS_EMERGENCY_POWER_SHUTDOWN = 0x02,x02228,7942
  IS_UNDER_SRST 241,8514
  IS_UNDER_SRST = 0x00,x00241,8514
  IS_SRST_COMP_AND_UNDER_UART_REPORT 242,8538
  IS_SRST_COMP_AND_UNDER_UART_REPORT = 0x01,x01242,8538
  IS_SRST_COMP_AND_UNDER_UART_REPORT_OR_TIME_OUT 243,8583
  IS_SRST_COMP_AND_UNDER_UART_REPORT_OR_TIME_OUT = 0x02,x02243,8583
  IS_RE_SRST_NG 261,9142
  IS_RE_SRST_NG = 0x08,x08261,9142
  IS_UARTFLAG_TIMEOUT 272,9587
  IS_UARTFLAG_TIMEOUT = 0x01,x01272,9587
  IS_UARTFLAG_BURSTMODE 273,9617
  IS_UARTFLAG_BURSTMODE = 0x02,x02273,9617
  GET_DRIVE_RAWDATA_FSM_before_initialize 276,9691
  GET_DRIVE_RAWDATA_FSM_initialize,277,9738
  GET_DRIVE_RAWDATA_FSM_get_drive_error_code,278,9774
  GET_DRIVE_RAWDATA_FSM_get_drive_data_before_rawdata_dump,279,9820
  GET_DRIVE_RAWDATA_FSM_get_parameters_for_srst_result,280,9880
  GET_DRIVE_RAWDATA_FSM_wait_till_srst_result_ready_on_drive_memory,281,9936
  GET_DRIVE_RAWDATA_FSM_dump_srst_result,282,10005
  GET_DRIVE_RAWDATA_FSM_check_drive_error_for_srst_result,283,10047
  GET_DRIVE_RAWDATA_FSM_request_next_page_for_srst_result,284,10106
  GET_DRIVE_RAWDATA_FSM_get_parameters_for_pes,285,10165
  GET_DRIVE_RAWDATA_FSM_wait_till_pes_ready_on_drive_memory,286,10213
  GET_DRIVE_RAWDATA_FSM_dump_pes,287,10274
  GET_DRIVE_RAWDATA_FSM_check_drive_error_for_pes,288,10308
  GET_DRIVE_RAWDATA_FSM_request_next_page_for_pes,289,10359
  GET_DRIVE_RAWDATA_FSM_get_parameters_for_mcs,290,10410
  GET_DRIVE_RAWDATA_FSM_wait_till_mcs_ready_on_drive_memory,291,10458
  GET_DRIVE_RAWDATA_FSM_dump_mcs,292,10519
  GET_DRIVE_RAWDATA_FSM_check_drive_error_for_mcs,293,10553
  GET_DRIVE_RAWDATA_FSM_request_next_page_for_mcs,294,10604
  GET_DRIVE_RAWDATA_FSM_get_drive_data_after_rawdata_dump,295,10655
  GET_DRIVE_RAWDATA_FSM_finalize,296,10714
  IDENTIFY_DRIVE_FSM_before_initialize 299,10788
  IDENTIFY_DRIVE_FSM_data_from_Echo_before_sequence,300,10832
  IDENTIFY_DRIVE_FSM_srst_sequence,301,10885
  IDENTIFY_DRIVE_FSM_data_from_Echo_after_sequence,302,10921
  IDENTIFY_DRIVE_FSM_serial_number,303,10973
  IDENTIFY_DRIVE_FSM_mfg_id,304,11009
  IDENTIFY_DRIVE_FSM_mfg_id_on_label,305,11038
  IDENTIFY_DRIVE_FSM_status,306,11076
  IDENTIFY_DRIVE_FSM_signature,307,11105
  IDENTIFY_DRIVE_FSM_environment,308,11137
  IDENTIFY_DRIVE_FSM_report_to_host,309,11171
  DRIVE_ECHO_DATA_SIZE 312,11261
  ERROR_CODE_EXT_cannot_get_sn 315,11312
  ERROR_CODE_EXT_cannot_get_sn = 0x00050000,x00050000315,11312
  ERROR_CODE_EXT_cannot_communicate_with_drive 316,11387
  ERROR_CODE_EXT_cannot_communicate_with_drive = 0x00010001,x00010001316,11387
  ERROR_CODE_EXT_unit_reason 317,11462
  ERROR_CODE_EXT_unit_reason = 0x00030000,x00030000317,11462
  ERROR_CODE_EXT_reporting_timeout 318,11537
  ERROR_CODE_EXT_reporting_timeout = 0x00070000,x00070000318,11537
  ERROR_CODE_EXT_RawdataPagecorrupt 319,11612
  ERROR_CODE_EXT_RawdataPagecorrupt = 0x0006000A,x0006000A319,11612
  ERROR_CODE_EXT_detect_abnormalreporting 320,11700
  ERROR_CODE_EXT_detect_abnormalreporting = 0x00060000,x00060000320,11700
  ERROR_CODE_EXT_cannot_finalizereporting 321,11774
  ERROR_CODE_EXT_cannot_finalizereporting = 0x00020004,x00020004321,11774
  ERROR_CODE_EXT_no_error_code 322,11848
  ERROR_CODE_EXT_no_error_code = 0x0002FF00,x0002FF00322,11848
  ERROR_CODE_EXT_re_srst_ok 323,11931
  ERROR_CODE_EXT_re_srst_ok = 0x00040000,x00040000323,11931
  ERROR_CODE_EXT_re_srst_ng 324,12006
  ERROR_CODE_EXT_re_srst_ng = 0x00040002,x00040002324,12006
  ERROR_CODE_srst_incomplete_re_srst_ng 325,12081
  ERROR_CODE_srst_incomplete_re_srst_ng = 0x30,x30325,12081
  ERROR_CODE_srst_incomplete_re_srst_ok 326,12156
  ERROR_CODE_srst_incomplete_re_srst_ok = 0x31,x31326,12156
  ERROR_CODE_EXT_enough_time_final 327,12231
  ERROR_CODE_EXT_enough_time_final = 0x80002,x80002327,12231
  ERROR_CODE_grading_nopass2ID 329,12307
  ERROR_CODE_grading_nopass2ID = 0x00068180,x00068180329,12307
  ERROR_CODE_grading_noswtb 330,12395
  ERROR_CODE_grading_noswtb = 0x00068181,x00068181330,12395
  ERROR_CODE_grading_wrpass2ID 331,12493
  ERROR_CODE_grading_wrpass2ID = 0x00068182,x00068182331,12493
  ERROR_CODE_grading_pending 332,12578
  ERROR_CODE_grading_pending = 0x00068183,x00068183332,12578
  ERROR_CODE_grading_swtabel 333,12670
  ERROR_CODE_grading_swtabel = 0x0006818F,x0006818F333,12670
  ERROR_CODE_EXT_cell_insertion_check_error 336,12744
  ERROR_CODE_EXT_cell_insertion_check_error = 0x000f9930,x000f9930336,12744
  ERROR_CODE_EXT_cell_voltage_error 337,12819
  ERROR_CODE_EXT_cell_voltage_error = 0x000f9931,x000f9931337,12819
  ERROR_CODE_EXT_cell_temperature_error 338,12894
  ERROR_CODE_EXT_cell_temperature_error = 0x000f9932,x000f9932338,12894
  ERROR_CODE_EXT_cell_abort_by_test_script 339,12969
  ERROR_CODE_EXT_cell_abort_by_test_script = 0x000f9933,x000f9933339,12969
  ERROR_CODE_EXT_cell_abort_by_user 340,13044
  ERROR_CODE_EXT_cell_abort_by_user = 0x000f9934,x000f9934340,13044
  NO_PASS2ID 344,13153
  NO_PASS2ID = 0x01,x01344,13153
  NO_SW_TBL 345,13174
  NO_SW_TBL = 0x02,x02345,13174
  SET_PASS2ID_ERROR 346,13194
  SET_PASS2ID_ERROR = 0x04,x04346,13194
  PENDING_ERROR 347,13222
  PENDING_ERROR = 0x08,x08347,13222
  IF_DRIVE_PASS 350,13279
  IF_DRIVE_PASS = 0x01,x01350,13279
  IF_DRIVE_FAIL 351,13303
  IF_DRIVE_FAIL = 0x02,x02351,13303
  IF_DRIVE_GODx 352,13327
  IF_DRIVE_GODx = 0x04,x04352,13327
  NORMAL_TEST_SCRIPT 355,13375
  HOST_COM_LOOPBACK_TEST,356,13401
  HOST_COM_DOWNLOAD_TEST,357,13427
  HOST_COM_MESSAGE_TEST,358,13453
  HOST_COM_UPLOAD_TEST,359,13478
  DRIVE_COM_READ_TEST,360,13502
  DRIVE_COM_READ_THEN_HOST_COM_UPLOAD_TEST,361,13525
  DRIVE_COM_ECHO_TEST,362,13569
  POWER_ON_ONLY_TEST,363,13592
  DRIVE_POLL_ONLY_TEST,364,13614
  DRIVE_TEMPERATURE_TEST,365,13638
  DRIVE_VOLTAGE_TEST,366,13664
  DRIVE_COM_ECHO_TEST_WITH_POWER_CYCLE,367,13686
  HOST_COM_UPLOAD_TEST_MIN_DATA_SIZE 370,13756
  HOST_COM_UPLOAD_TEST_MAX_DATA_SIZE 371,13798
  DRIVE_COM_READ_TEST_MIN_DATA_SIZE 372,13850
  DRIVE_COM_READ_TEST_MAX_DATA_SIZE 373,13891
  ABORT_REQUEST_BY_USER 376,13958
  ABORT_REQUEST_BY_TEST_SCRIPT,377,13987
  VOLTAGE_LIMIT_UART_LOW_MV 380,14043
  VOLTAGE_LIMIT_UART_HIGH_MV 381,14079
  VOLTAGE_LIMIT_5V_LOW_MV 382,14116
  VOLTAGE_LIMIT_5V_HIGH_MV 383,14150
  VOLTAGE_LIMIT_12V_LOW_MV 384,14185
  VOLTAGE_LIMIT_12V_HIGH_MV 385,14221
  UART_PROTOCOL_IS_A00 388,14282
  UART_PROTOCOL_IS_ARM,389,14310
  MAX_CONFIG_FILE_SIZE_IN_BYTE 392,14350
  MAX_SIZE_OF_DMCB 393,14396
  MAX_NUMBER_OF_FORCE_STOP_PF_CODE 394,14471
  TSCB_SIGNATURE 395,14563
  TSCB_SIGNATURE = 0x12345678,x12345678395,14563
  DRIVE_PLUG_RETRY_SEC 396,14594
  MAX_REPORT_DATA_SIZE_BYTE 397,14656
  DEFAULT_LOG_SIZE_IN_KBYTE 398,14742
  MAX_LOG_SIZE_IN_KBYTE 399,14776
  DEFAULT_LOG_MIRROR_TO_STDOUT 400,14866
  MAX_SIZE_OF_DUMP_BINARY 401,14902
  SLEEP_UNIT_SEC 402,14942
  SLEEP_MODE_PARTIAL 403,14965
  SLEEP_MODE_SLUMBER,404,14991
  SLEEP_TIME_AFTER_DRIVE_UNLOAD_SEC 405,15013
  SLEEP_TIME_BEFORE_RAWDATA_DUMP_FINALIZE 406,15106
  MEMORY_WATER_MARK_THRESHOLD_IN_BYTE 407,15207
  WAIT_TIME_SEC_FOR_MEMORY_ALLOC 408,15303
  RAWDATA_RETRY_CONT 409,15342
  FUNALIZE_RETRY_CONT 410,15369
  WAIT_TIME_SEC_FOR_DRIVE_RESPONSE 414,15574
  UART_PULLUP_VOLTAGE_DEFAULT 415,15615
  WAIT_TIME_SEC_FOR_DRIVE_RESPONSE 419,15875
  WAIT_TIME_SEC_FOR_DRIVE_RESPONSE_POLL 423,16176
  MAX_UART_DATA_SIZE_BYTE 424,16221
  DRIVE_ACCESS_RETRY_INTERVAL_SEC 425,16305
  DRIVE_SECTOR_SIZE_BYTE 426,16344
  WAIT_TIME_SEC_FOR_DRIVE_IDENTIFY_POLL 427,16376
  WAIT_TIME_SEC_FOR_DRIVE_RAWDATA_FLAG_POLL 428,16422
  WAIT_TIME_SEC_FOR_HOST_RESPONSE 429,16540
  WAIT_TIME_SEC_FOR_HOST_RESPONSE_POLL 430,16580
  WAIT_TIME_SEC_FOR_RELEASE_CPU 431,16624
  RELEASE_CPU_TRIGGER 432,16698
  DRIVE_PES_HEADER_SIZE 433,16726
  CELL_TEST_LIBRARY_VERSION_SIZE 434,16756
  DOWNLOAD_FILE_CHUNK_SIZE 435,16795
  DOWNLOAD_FILE_NAME_COMPARE_SIZE 436,16831
  WAIT_TIME_SEC_FOR_CHAMBER_SCRIPT_RESPONSE_POLL 437,16871
#define TESTCODE_VERSION 440,16929
#define MY_TASK_ID 442,17000
#define MY_CELL_NO 443,17030
#define LOGIC_CARD_SERVER_STR 445,17153
#define MESSAGE_ID_STR 446,17210
#define MESSAGE_GRADING_ID_STR 447,17268
#define MESSAGE_GRADING_ID_STR_WITHFLAG 448,17331
#define MESSAGE_STATUS_STR 449,17402
#define MESSAGE_BAD_HEAD_STR 450,17461
#define MESSAGE_PRECOMP_COMMAND_STR 451,17517
#define MESSAGE_COMP_COMMAND_STR 452,17599
#define MESSAGE_TEST_TIMEOUT 453,17678
#define MESSAGE_FUNCTION_NAME_STR 455,17742
#define MESSAGE_PRECOMP_FUNCTION_NAME_STR 456,17798
#define MESSAGE_COMMAND_STR 457,17854
#define MESSAGE_HOST_RESPONSE_FOR_FILE 458,17906
#define MESSAGE_HOST_RESPONSE_FOR_COMP 459,17963
#define MESSAGE_DOWNLOAD_CMD_STR 461,18017
#define MESSAGE_DOWNLOAD_SYNC_STR 462,18084
#define MESSAGE_SEPARATOR 464,18153
#define INTEGER_SEPARATOR 465,18202
#define SIGNATURE_SRST_RUNNING 466,18251
#define SIGNATURE_SRST_ABORT 467,18303
#define SIGNATURE_SRST_COMPLETE 468,18355
#define SIGNATURE_SRST_PENDING 469,18407
#define SIGNATURE_SELFSRST 471,18460
#define SIGNATURE_COMPSRST 472,18502
#define SIGNATURE_SELFFIN0 473,18544
#define SIGNATURE_SELFFIN1 474,18586
#define SIGNATURE_COMPFIN1 475,18628
#define SIGNATURE_ABORFIN1 476,18670
#define SIGNATURE_ABORFIN0 477,18712
#define SIGNATURE_ABORSRST 478,18754
#define SIGNATURE_PENDSRST 479,18796
#define SIGNATURE_PENDFIN0 480,18838
#define SIGNATURE_PENDFIN1 481,18880
#define OPTIMUS 483,18923
#define KEY_SRST_TOP_ADDRESS 485,18942
#define KEY_SERIAL_NUMBER 486,19009
#define KEY_MFG_ID 487,19076
#define KEY_SRST_PARAMETER 488,19143
#define KEY_SRST_SEQUENCE 489,19210
#define KEY_SRST_SEQUENCE2 490,19277
#define KEY_IDENTIFY 491,19344
#define KEY_MICRO_REVISION_LEVEL 492,19411
#define KEY_SERVO_SECTOR_NUMBER 493,19478
#define KEY_HEAD_NUMBER 494,19545
#define KEY_HEAD_TABLE 495,19612
#define KEY_HEAD_CONVERTION_TABLE 496,19679
#define KEY_TPI_BPI 497,19746
#define KEY_SPINDLE_RPM 498,19813
#define KEY_MFGID_ON_LABEL 499,19880
#define KEY_TEMPERATURE 500,19947
#define KEY_STEP_COUNT 501,20014
#define KEY_STATUS_AND_CONTROL 502,20081
#define KEY_STATUS_AND_CONTROL_B 503,20148
#define KEY_IMMEDIATE_FLAG 504,20215
#define KEY_UART_FLAG 505,20282
#define KEY_LAST_PAGE 506,20349
#define KEY_LAST_POINTER 507,20416
#define KEY_NUMBER_OF_SETUP_PAGE 508,20483
#define KEY_SRST_RESULT 509,20550
#define KEY_PES_TOTAL_NUMBER_OF_PAGE 510,20617
#define KEY_PES_CYLINDER 511,20684
#define KEY_PES_HEAD 512,20751
#define KEY_PES_TEMPERATURE 513,20818
#define KEY_PES_DATA_COUNT 514,20885
#define KEY_PES_SPINDLE_SPEED 515,20952
#define KEY_PES_NUMBER_OF_SERVO_SECTOR 516,21019
#define KEY_NUMBER_OF_SERVO_SECTOR 517,21086
#define KEY_PES_DATA 518,21153
#define KEY_DRIVE_PARAMETER_BYTE 519,21220
#define KEY_DRIVE_PARAMETER 520,21287
#define KEY_ERROR_CODE 521,21354
#define KEY_BAD_HEAD 522,21421
#define KEY_SRST_SIGNATURE 523,21488
#define KEY_ALTTRK_TBL 524,21555
#define KEY_ZONE_PARAMETER 525,21622
#define KEY_ZONE_IMAGE 526,21689
#define KEY_SRVM_IMAGE 527,21756
#define KEY_RE_SRST_PROHIBIT 528,21823
#define KEY_GEOPARAMETER 529,21890
#define KEY_TPI_INFORMATION 530,21957
#define KEY_PASS2ID 531,22024
#define KEY_GRADING_FLAG 532,22091
#define KEY_GRADING_FLAG_WF 533,22158
#define KEY_OFFSET_HEAD 534,22225
#define KEY_GRADING_REPORT 535,22292
#define KEY_LIBRARY_VERSION 536,22359
#define KEY_SWITCH_TABLE 537,22443
#define KEY_TIME_LOG 538,22510
#define KEY_TESTER_TEMPERATURE_LOG 539,22577
#define KEY_TESTER_UART_LOG 540,22644
#define KEY_TESTER_CONFIG_LOG 541,22711
#define KEY_TESTER_ERROR_LOG 542,22778
#define KEY_TESTER_LOG 543,22845
#define KEY_TESTER_RECORD 544,22912
#define KEY_TESTER_DUMMY_DATA 545,22979
#define KEY_TESTER_VOLTAGE_DATA 546,23046
#define SWITCH_TABLE_NAME 549,23115
#define EACH_WORD_WRITE 551,23170
#define SRST_PART 553,23202
#define FINAL_PART 554,23231
#define REPORT_PRECOMP 556,23262
#define REPORT_COMP 557,23292
#define RECEIVE_BUFFER_ID 558,23320
Word wReadBlocksize;561,23398
Byte bTesterflag;562,23419
Word wParamPageNumber;563,23437
typedef struct test_script_recorder_block 566,23462
} TEST_SCRIPT_RECORDER_BLOCK;573,23658
typedef struct test_script_abort_block 575,23689
} TEST_SCRIPT_ABORT_BLOCK;579,23782
typedef struct test_script_log_block 581,23810
} TEST_SCRIPT_LOG_BLOCK;589,24036
typedef struct uart_performance_log_block 591,24062
} UART_PERFORMANCE_LOG_BLOCK;595,24186
typedef struct test_script_error_block 597,24217
} TEST_SCRIPT_ERROR_BLOCK;618,24992
typedef struct drive_memory_control_block 620,25020
} DRIVE_MEMORY_CONTROL_BLOCK;628,25202
typedef struct test_result_save_block 630,25233
} TEST_RESULT_SAVE_BLOCK;634,25354
typedef struct test_script_control_block 636,25381
} TEST_SCRIPT_CONTROL_BLOCK;812,30772

../testscript/tsHead.c,90
#define INT2BIT(3,17
Dword convertBadHead(30,1051
Byte createDriveBadHeadTable(69,2290

../testscript/tsHost.c,532
#define IGNORE_QGET_DEBUG3,17
void reportHostId(18,515
void reportHostGradingId(111,3186
void reportHostTestTimeOut(208,6131
void reportHostTestStatus(305,9160
void reportHostTestDataChild(400,11954
void reportHostTestData(546,16796
void reportHostBadHead(577,17856
void reportHostTestComplete(657,21161
void reportHostTesterLog(844,27296
void reportHostTestMessage(891,28862
void reportHostErrorMessage(983,31623
void downloadFile(1033,33282
void downloadFileInBroadcast(1139,36362
void downloadFileChild(1201,38750

../testscript/tsIdfy.c,56
Byte identifyDrive(43,1663
Byte getEchoData(351,15486

../testscript/tsLib.c,3038
void *runTestScriptThread(runTestScriptThread28,1181
#define task_twait(95,2669
extern int pthread_yield 97,2709
#define USE_YIELD130,3933
} task_id[task_id159,4515
Word get_task_base_offset(162,4669
Byte set_task(169,4908
Word get_task(184,5372
Byte get_MY_CELL_NO_by_index(210,6084
Byte is_que(237,6752
Word getCellComModuleTaskNo(244,6948
void DI_(251,7173
void EI_(256,7351
Word tmp_wLength;260,7451
Dword tmp_dwAddress;261,7470
Byte tmp_bType;262,7492
void put_que(265,7589
QUE *get_que(get_que314,8865
#define STEP(317,8966
#define task_twait(1073,32899
void task_delay(1076,33017
Byte is_que(1081,33220
Word getCellComModuleTaskNo(1088,33416
void DI_(1095,33641
void EI_(1100,33819
Word tmp_wLength;1104,33919
Dword tmp_dwAddress;1105,33938
Byte tmp_bType;1106,33960
void put_que(1109,34057
QUE *get_que(get_que1158,35329
#define STEP(1161,35430
ZQUE *zqueToTscb[zqueToTscb1912,59174
TEST_SCRIPT_ABORT_BLOCK testScriptAbortBlock[testScriptAbortBlock1913,59222
TEST_SCRIPT_LOG_BLOCK testScriptLogBlock[testScriptLogBlock1914,59298
void runTestScript(1960,62169
Byte isTestScriptAbortRequested(2107,67152
void abortTestScript(2157,68832
void ts_abort(2183,69509
Byte *getCellTestLibraryVersion(getCellTestLibraryVersion2205,70073
Byte textInQuotationMark2String(2227,70748
Byte hhhhmmssTimeFormat2Sec(2259,71868
void sec2hhhhmmssTimeFormat(2291,73049
Dword ts_memcmp_exp(2322,73879
static int ts_cval(2339,74197
Dword ts_strtoul(2392,76840
Byte ts_isprint_mem(2446,77987
Byte checkAlpha(2461,78187
Byte ts_isalnum_mem(2484,78903
Dword *memcpyWith32bitLittleEndianTo32bitConversion(memcpyWith32bitLittleEndianTo32bitConversion2508,79567
Dword *memcpyWith32bitBigEndianTo32bitConversion(memcpyWith32bitBigEndianTo32bitConversion2545,80641
Word *memcpyWith16bitLittleEndianTo16bitConversion(memcpyWith16bitLittleEndianTo16bitConversion2582,81714
Word *memcpyWith16bitBigEndianTo16bitConversion(memcpyWith16bitBigEndianTo16bitConversion2619,82742
Byte *memcpyWith32bitLittleEndianTo8bitConversion(memcpyWith32bitLittleEndianTo8bitConversion2656,83770
Byte *memcpyWith16bitLittleEndianTo8bitConversion(memcpyWith16bitLittleEndianTo8bitConversion2694,84796
void ts_qfree(2723,85381
void ts_qfree_then_abort(2734,85582
void *ts_qalloc(ts_qalloc2752,86208
time_t dwTestScriptTimeSec[dwTestScriptTimeSec2789,87321
Dword dwTestScriptTimeSec[dwTestScriptTimeSec2793,87503
Dword dwTestScriptTimeSecAsOfNow;2794,87597
Dword dwTestScriptTimeSecPrevious;2795,87632
Byte ts_qis(2806,87960
void *ts_qget(ts_qget2817,88159
void ts_qput(2828,88359
void resetTestScriptTimeInSec(2839,88613
Dword getTestScriptTimeInSec(2873,89653
void sub_ts_sleep(2917,91409
void ts_sleep_partial(2986,93949
void ts_sleep_slumber(3000,94344
void resetTestScriptLog(3011,94598
void getTestScriptLog(3061,96142
void ts_printf(3081,96928
const Byte bBinary2Ascii[bBinary2Ascii3210,101130
void putBinaryDataDump(3227,101849
Dword calcAtoUL(3283,103606
Dword convA2H(3298,103989

../testscript/tsMain.c,915
void runTestScriptMain(32,1404
void runTestScriptDestructor(101,3335
void runTestScriptSrst(117,3781
void optTime(367,15567
void runTestScriptHostComLoopbackTest(386,16478
void runTestScriptHostComDownloadTest(419,17331
void runTestScriptHostComMessageTest(452,18184
void runTestScriptHostComUploadTest(522,20323
void runTestScriptDriveComReadTest(632,23741
void runTestScriptDriveComReadThenHostComUploadTest(750,27364
void runTestScriptDriveComEchoTest(873,31187
#define UART_CHECK_CRITERIA 941,33458
void runTestScriptDriveComEchoTestWithPowerCycle(984,35010
#define UART_CHECK_CRITERIA 1072,37884
void runTestScriptPowerOnOnly(1116,39438
void runTestScriptDrivePollOnly(1188,41382
void runTestScriptTemperatureTest(1276,44070
#define MAX_CRITERIA 1278,44141
#define TEMP_CHECK_CRITERIA 1433,48900
void runTestScriptVoltageTest(1457,49612
Byte JumpProcess(1542,51784
Byte WaitNT(1603,53917

../testscript/tsParse.c,385
Byte *getFieldInScriptFile(getFieldInScriptFile21,753
Byte *searchLineTopInScriptFile(searchLineTopInScriptFile102,2787
Byte setParameterIntoTestScriptControlBlock(155,4103
Byte parseTestScriptFile(569,26044
Byte queryDriveMemoryControlBlock(655,28771
Byte *queryDriveDataAddress(queryDriveDataAddress681,29573
void freeMemoryForSaveData(726,31843
void getSWtable(750,32615

../testscript/tsPoll.c,83
Byte waitDriveTestCompleted(13,290
void recordDriveAndEnvironmentStatus(199,6918

../testscript/tsRaw.c,344
Byte isDriveReportingDataReady(13,422
Byte getDriveReportingData(88,3368
unsigned char getDriveParametersForResultDump(260,11162
unsigned char getDriveParametersForPesDump(311,12800
unsigned char getDriveParametersForPesHeader(354,14154
Dword removeECCbytes(422,16528
Byte  readRawdataFromDrive(456,17657
Byte getDriveRawdata(659,26349

../testscript/tsStat.c,710
Byte isDriveRawdataReady(11,240
Byte isDrivePesReady(27,677
Byte isDriveMcsReady(40,1024
Byte isDriveRawdataSetupError(53,1380
Byte isDriveRawdataSetupReady(66,1741
Byte setDriveRawdataTransferComplete(80,2149
Byte setDriveRawdataRetryRequest(105,3014
Byte clearDriveRawdataRetryRequest(129,3831
Byte getDriveRawdataStatusAndControl(154,4732
Byte clearReportingTimerOnSsrst(196,6006
Byte getDriveTemperature(228,7340
Byte getSRSTstep(259,8420
Byte getGradingflag(280,8998
Byte getHead(333,10876
Byte setDrivePass2ID(366,11920
Byte clearGradingFlag(385,12539
Byte grading(408,13409
Dword cutout_sw_bit(539,19054
Dword next_position(572,19747
unsigned char *prepare_buf(prepare_buf600,20498

../signalhandler/libsh.h,23
#define _LIBSH_H_2,18

../signalhandler/shMain.c,139
  WAIT_TIME_IN_SEC_AFTER_REQUESTING_ABORT 15,325
  WAIT_TIME_FOREVER 16,492
void *runSignalHandlerThread(runSignalHandlerThread40,1414

../chamberscript/csApi.c,829
#define MATCH 8,115
time_t dwChamberScriptTimeSec;11,204
time_t dwChamberScriptTimeSecFromJump;12,235
double dwChamberScriptJumpedTime;13,274
Dword csElapsedTime(18,407
Dword csElapsedTimeFromJump(32,844
int csInitializeTimer(46,1414
int csInitializeTimerFromJump(57,1742
int csCallSequence(68,2040
int csCallEndSequence(79,2388
int csCallSaveInterval(90,2740
int csCallRestart(101,3092
int csCallSetVolt(123,3981
int csCallSetTemp(134,4338
int csCallHoldMin(153,4888
int csCallCommand(262,7949
int csCallResumeCommand(299,9312
int csCallSave(310,9666
int csCallLoop(321,10010
int csCallVersion(332,10355
int csCallSumValue(343,10703
int csCallLabel(354,11052
int csCallResumeAsDummy(365,11398
int csWaitUntilTemperatureOnTarget(376,11745
Byte csJump(443,13574
int csCallInitialTemperatureSet(469,14449

../chamberscript/cs.h,303
#define MAX_FILE_SIZE 22,358
#define MAX_CTRL_STEP 23,408
  TEMP_CHECK_DURATION 26,467
struct csStep 35,684
typedef struct csStep csCtrlStep;48,897
struct csJumpLabel 52,975
typedef struct csITemperature 58,1053
} csInitialTemperature;63,1200
struct csJumpLabel csJumpTable[csJumpTable65,1225

../chamberscript/csInterpreter.c,440
#define MATCH 8,122
int execIdx;25,808
Byte resumeFlg 26,822
csInitialTemperature csITemp;27,843
int csInterpreter(30,957
int csAllocateMyArea(190,5028
int csCosmeticSurgery(248,6912
int csExecuteChamberControl(294,8036
Byte csDeleteResumeIdx(356,10118
Byte csWriteResumeIdx(385,10992
Byte csReadResumeIdx(436,12763
Byte csConfigureJumpTable(542,16117
Byte csDeleteElapsedStep(572,17535
Byte csSetInitialTemperature(632,19731

../chamberscript/csMain.c,274
#define MATCH 10,168
void *runChamberScriptThread(runChamberScriptThread17,383
void parseChamberScript(104,2932
#define TEMP_CHECK_POLL_INTERVAL_IN_SEC 170,4860
int csIsLabelInRemainingSequence(237,6688
unsigned long csGotoLabel(273,7708
Byte csGotoRequest(288,8165

../chamberscript/csSyntaxProcess.c,1076
#define MATCH 8,114
const char csNameSetTemp[csNameSetTemp12,253
const char csNameSetVolt[csNameSetVolt13,293
const char csNameHoldMin[csNameHoldMin14,333
const char csNameCommand[csNameCommand15,373
const char csNameResumeCommand[csNameResumeCommand16,413
const char csNameSaveInterval[csNameSaveInterval17,465
const char csNameRestart[csNameRestart18,515
const char csNameSequence[csNameSequence19,555
const char csNameEndSequence[csNameEndSequence20,597
const char csNameLoop[csNameLoop21,645
const char csNameSave[csNameSave22,679
const char csNameVersion[csNameVersion23,713
const char csNameSumValue[csNameSumValue24,753
const char csNameLabel[csNameLabel25,795
const char csNameResume[csNameResume27,871
const char csNameInitialTemperatureSet[csNameInitialTemperatureSet28,910
const char *functionList[functionList30,994
const int csMaxFunctionNumber 49,1482
int csLoopFlg 55,1673
int csValidateSyntax(58,1773
int csStringToStructure(216,7571
int csSplitArg(423,13358
int csExpandLoop(636,20846
int csConfigureResume(805,25811

../chamberscript/csUnit.c,1895
int csUnitTest(9,116
int csUnitTest_chkHoldMin1(43,770
int csUnitTest_chkHoldMin2(63,1107
int csUnitTest_chkHoldMin3(83,1444
int csUnitTest_chkHoldMin4(103,1782
int csUnitTest_chkHoldMin5(123,2124
int csUnitTest_chkLoopTest1(143,2466
int csUnitTest_chkLoopTest2(166,2879
int csUnitTest_chkLoopTest3(189,3292
int csUnitTest_chkLoopTest4(212,3706
int csUnitTest_resumeOK1(239,4136
int csUnitTest_resumeOK2(268,4747
int csUnitTest_resumeOK3(297,5359
int csUnitTest_resumeZeroOK(326,5971
int csUnitTest_chkResume1(359,6617
int csUnitTest_chkResume2(388,7245
int csUnitTest_chkResume3(417,7858
int csUnitTest_chkResume4(446,8471
int csUnitTest_chkResume5(475,9117
int csUnitTest_erResume1(508,9756
int csUnitTest_erResume2(537,10382
int csUnitTest_erResume3(566,11013
int csUnitTest_erParam1(600,11684
int csUnitTest_erParam2(628,12284
int csUnitTest_erParam3(656,12887
int csUnitTest_erParam4(684,13497
int csUnitTest_erParam5(712,14103
int csUnitTest_erParam6(740,14718
int csUnitTest_erParam7(768,15328
int csUnitTest_erSeparator1(800,15978
int csUnitTest_erSeparator2(827,16589
int csUnitTest_erSeparator3(855,17201
int csUnitTest_erSeparator4(883,17815
int csUnitTest_erSeparator5(911,18430
int csUnitTest_erSeparator6(939,19043
int csUnitTest_erCamma1(971,19754
int csUnitTest_erCamma2(1000,20359
int csUnitTest_erCamma3(1029,20964
int csUnitTest_erHugeInputFile(1060,21607
int csUnitTest_erZeroLengthFile(1088,22192
int csUnitTest_erMissAddress(1121,22819
int csUnitTest_erBinFile(1138,23023
int csUnitTest_EOF1(1170,23648
int csUnitTest_EOF2(1200,24266
int csUnitTest_EOF3(1230,24887
int csUnitTest_erEOF1(1262,25515
int csUnitTest_erEOF2(1292,26174
int csUnitTest_erFunction1(1327,26839
int csUnitTest_erFunction2(1354,27411
int csUnitTest_erFunction3(1381,27983
int csUnitTest_erFunction4(1408,28555
int csUnitTest_erFunction5(1435,29130

../chamberscript/libcs.h,23
#define _LIBCS_H_2,19

../syncmanager/libsm.h,1464
#define _LIBSM_H_2,18
  enum eSMTIMEOUT 10,126
  enum eSMTIMEOUT { SM_SD_TIMEOUT 10,126
                    SM_RV_TIMEOUT 11,165
                    SM_CS_SD_TIMEOUT 12,204
                    SM_CS_RV_TIMEOUT 13,246
                    SM_TC_SD_TIMEOUT 14,298
                    SM_TC_RV_TIMEOUT 22,895
                    SM_SH_SD_TIMEOUT 23,940
                    SM_SH_RV_TIMEOUT 24,982
                    SM_TS_SD_TIMEOUT 25,1024
                    SM_TS_RV_TIMEOUT 26,1066
  enum eSMERROR 29,1179
    SM_NO_ERROR 30,1197
    SM_FAILURE_ERROR 31,1226
    SM_BUFFER_FULL_ERROR 32,1258
    SM_BUFFER_EMPTY_ERROR 33,1289
    SM_MUTEX_UNLOCK_ERROR 34,1320
    SM_MUTEX_LOCK_ERROR 35,1351
    SM_TIMEOUT_ERROR 36,1382
    SM_ANOTHER_MESSAGE 37,1413
  enum eSMERROR_Q 40,1492
    SM_MESSAGE_AVAILABLE 41,1512
    SM_MESSAGE_UNAVAILABLE 43,1598
  enum eSM_CS_SD_MESSAGE 48,1721
    SM_CS_SD_CSREADY 49,1748
    SM_CS_SD_JMPACK 50,1821
    SM_CS_SD_PREPDATA 51,1886
    SM_CS_SD_FINALSTART 52,1944
  enum eSM_CS_RV_MESSAGE 55,2053
    SM_CS_RV_JMPREQ 56,2080
  enum eSM_TC_RV_MESSAGE 62,2258
    SM_TC_RV_CSREADY 63,2285
  enum eSM_SH_SD_MESSAGE 66,2390
    SM_SH_SD_ABORT 67,2417
  enum eSM_TS_SD_MESSAGE 73,2604
    SM_TS_SD_FINISH 74,2631
    SM_TS_SD_JMPREQ 75,2686
  enum eSM_TS_RV_MESSAGE 78,2795
    SM_TS_RV_ABORT 79,2822
    SM_TS_RV_JMPACK 80,2888
    SM_TS_RV_PREPDATA 81,2952
    SM_TS_RV_FINALSTART 82,3009

../syncmanager/smApi.c,59
int smCheckTimeOut(9,192
time_t smInitializeTimer(23,802

../syncmanager/sm.h,23
#define  MATCH 12,263

../syncmanager/smMain.c,405
pthread_mutex_t mutex_syncmanager;12,261
void *runSyncManagerThread(runSyncManagerThread16,371
Byte smGetBuffer(225,8193
Byte smSendMessage(270,9477
Byte smReceiveMessage(393,15066
Byte smSendSyncMessage(518,20833
Byte smReceiveSyncMessage(556,21885
Byte smSendSyncMessageForSM(603,23154
Byte smReceiveSyncMessageForSM(638,24166
Byte smQuerySyncMessage(647,24448
Byte smQueryMessage(660,24880

../versioncontrol/libvc.h,23
#define _LIBVC_H_2,18

../versioncontrol/vcMain.c,341
#define VC_DATE 6,93
#define VC_TESTCASE_VERSION 7,155
#define VC_BASE_VERSION 8,213
#define VC_HARDWARE_LIBRARY_VERSION 9,271
#define VC_EDITOR 10,335
#define VC_CHANGE_ITEM 11,402
#define VC_REMARK 12,483
#define VC_STRING 14,536
#define VC_MAX_LENGTH 23,947
#define TCPRINTF 33,1203
int main(35,1228
Byte vcGetVersion(59,1823

tcDebug.c,432
#define MATCH 3,17
struct symlist 5,103
} *symbols symbols10,191
void tcInitCaller(13,288
const char *tcGetCaller(tcGetCaller42,1070
void tcDumpCaller(125,2971
TEST_SCRIPT_CONTROL_BLOCK *tcUnitTestTscb tcUnitTestTscb141,3309
TEST_SCRIPT_CONTROL_BLOCK *tcGetTscb(tcGetTscb143,3436
unsigned char *tcUnitTestBuffer tcUnitTestBuffer151,3624
unsigned char *tcGetBuffer(tcGetBuffer153,3741
int tcBadHeadUnitTest(162,4124

tcFilter.c,217
const unsigned long ts_crc32_table[ts_crc32_table4,47
unsigned long ts_crc32(6,3215
const Byte bBinary2AsciiOfPrintf[bBinary2AsciiOfPrintf20,3594
void putBinaryDataDumpOfPrintf(22,3728
void tcLogFilter(74,5324

tc.h,20
#define _TC_H_2,16

tcMain.c,1121
  DRIVE_POWER_OFF 4,24
  EXIT_CELL_OFFLINE 5,69
  ENVELOP_TEMP 6,187
  NOMINAL_TEMP 7,280
  POS_RAMP_RATE_TEMP_FOR_PRODUCTION 8,328
  NEG_RAMP_RATE_TEMP_FOR_PRODUCTION 9,375
  POS_RAMP_RATE_TEMP_FOR_BENCHDEBUG 10,422
  NEG_RAMP_RATE_TEMP_FOR_BENCHDEBUG 11,469
  SAFE_HANDLING_TEMP 12,516
  SAFE_HANDLING_TEMP_FOR_TIMEOUT_CALC 13,638
  MAX_SAFE_HANDLING_TIMEOUT_IN_SEC 14,686
pthread_mutex_t mutex_tcPrintf;17,753
pthread_mutex_t mutex_tcExit;18,785
TCCB tccb;20,816
const char TEST_PARAM_INITIAL_TEST[TEST_PARAM_INITIAL_TEST21,827
char tcPrintfFilename[tcPrintfFilename22,982
int tcPrintfDisable 23,1019
int main(27,1123
void tcPrintfFileInZip(524,16110
void tcPrintf(542,16644
#define DISPLAY_MSEC_TIME558,17097
void tcExit(666,19706
Byte tcParseTestLocationIndex(887,26172
void tcDumpCore(962,28464
Byte tcDumpBacktrace(1008,30217
void tcQuickEnv(1074,32302
#define HGST_CELL_NUM_MAX 1077,32416
void tcCleanUpCell(1167,34920
void tcTestcaseInZip(1215,35907
void tcDumpIpAddress(1253,36942
void tcDumpData(1281,37648
void tcAddResumeInfomation(1334,39300
Byte tcWaitCSReady(1364,40307

tcTypes.h,750
#define _TCTYPES_H_13,422
typedef unsigned long Dword;15,443
typedef unsigned short Word;16,472
typedef unsigned char Byte;17,501
typedef struct stZque 19,530
} ZQUE, BQUE, QUE;28,1097
typedef struct stZData 30,1117
} ZDAT;39,1746
typedef struct stHque 42,1798
} HQUE;58,2817
typedef struct cell_card_inventory_block 61,2827
} CELL_CARD_INVENTORY_BLOCK;78,3293
#define MAX_NUM_OF_TEST_SCRIPT_THREAD 81,3324
typedef struct sm_message 84,3374
} SM_MESSAGE;88,3454
typedef struct sm_buffer 91,3470
} SM_BUFFER;96,3587
typedef struct stGenericThreadControlBlock 99,3602
} GTCB;112,4094
typedef struct stTestcaseControlBlock 115,4104
} TCCB;136,4652
#define PRINTF_STYLE(151,4887
#define TCPRINTF(156,5039
  void tcPrintf(174,5740
